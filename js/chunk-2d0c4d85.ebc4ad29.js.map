{"version":3,"sources":["webpack:///./node_modules/sweetalert2/dist/sweetalert2.all.js"],"names":["global","factory","module","exports","this","privateProps","awaitingPromise","WeakMap","promise","innerParams","domCache","swalPrefix","prefix","items","result","i","swalClasses","iconTypes","consolePrefix","uniqueArray","arr","length","indexOf","push","capitalizeFirstLetter","str","charAt","toUpperCase","slice","warn","message","console","join","error","previousWarnOnceMessages","warnOnce","includes","warnAboutDeprecation","deprecatedParam","useInstead","callIfFunction","arg","hasToPromiseFn","toPromise","asPromise","Promise","resolve","isPromise","getContainer","document","body","querySelector","container","elementBySelector","selectorString","elementByClass","className","getPopup","popup","getIcon","icon","getIconContent","getTitle","title","getHtmlContainer","getImage","image","getProgressSteps","getValidationMessage","getConfirmButton","actions","confirm","getDenyButton","deny","getInputLabel","getLoader","loader","getCancelButton","cancel","getActions","getFooter","footer","getTimerProgressBar","getCloseButton","close","focusable","getFocusableElements","focusableElementsWithTabindex","Array","from","querySelectorAll","sort","a","b","tabindexA","parseInt","getAttribute","tabindexB","otherFocusableElements","filter","el","concat","isVisible$1","isModal","hasClass","shown","isToast","toast","isLoading","hasAttribute","states","previousBodyPadding","setInnerHtml","elem","html","textContent","parser","DOMParser","parsed","parseFromString","childNodes","forEach","child","appendChild","HTMLVideoElement","HTMLAudioElement","cloneNode","classList","split","contains","removeCustomClasses","params","Object","values","showClass","remove","applyCustomClass","customClass","addClass","getInput$1","inputClass","checkbox","radio","range","input","focusInput","focus","type","val","value","toggleClass","target","condition","Boolean","isArray","add","removeClass","getDirectChildByClass","children","HTMLElement","applyNumericalStyle","property","style","removeProperty","show","display","arguments","undefined","hide","setStyle","parent","selector","toggle","offsetWidth","offsetHeight","getClientRects","allButtonsAreHidden","isScrollable","scrollHeight","clientHeight","hasCssAnimation","window","getComputedStyle","animDuration","parseFloat","getPropertyValue","transDuration","animateTimerProgressBar","timer","reset","timerProgressBar","transition","width","setTimeout","stopTimerProgressBar","timerProgressBarWidth","timerProgressBarFullWidth","timerProgressBarPercent","RESTORE_FOCUS_TIMEOUT","globalState","focusPreviousActiveElement","previousActiveElement","restoreActiveElement","returnFocus","x","scrollX","y","scrollY","restoreFocusTimeout","scrollTo","isNodeEnv","sweetHTML","file","select","label","textarea","replace","resetOldContainer","oldContainer","documentElement","resetValidationMessage$1","currentInstance","resetValidationMessage","addInputChangeListeners","rangeOutput","oninput","onchange","getTarget","setupAccessibility","setAttribute","setupRTL","targetElement","direction","rtl","init","oldContainerExisted","createElement","parseHtmlToContainer","param","handleObject","jquery","handleJqueryElem","toString","animationEndEvent","testEl","transEndEventNames","WebkitAnimation","animation","prototype","hasOwnProperty","call","measureScrollbar","scrollDiv","scrollbarWidth","getBoundingClientRect","clientWidth","removeChild","renderActions","instance","showConfirmButton","showDenyButton","showCancelButton","renderButtons","loaderHtml","confirmButton","denyButton","cancelButton","renderButton","handleButtonsStyling","reverseButtons","insertBefore","buttonsStyling","styled","confirmButtonColor","backgroundColor","denyButtonColor","cancelButtonColor","button","buttonType","renderCloseButton","closeButton","closeButtonHtml","showCloseButton","closeButtonAriaLabel","renderContainer","handleBackdropParam","backdrop","handlePositionParam","position","handleGrowParam","grow","background","center","growClass","inputClasses","renderInput","get","rerender","inputContainer","setAttributes","inputAttributes","showInput","setCustomClass","renderInputType","getInputContainer","removeAttributes","attributes","attrName","name","removeAttribute","attr","setInputPlaceholder","placeholder","inputPlaceholder","setInputLabel","prependTo","inputLabel","id","labelClass","innerText","insertAdjacentElement","inputType","checkAndSetInputValue","inputValue","text","email","password","number","tel","url","rangeInput","disabled","selected","checkboxContainer","checked","getMargin","marginLeft","marginRight","initialPopupWidth","textareaResizeHandler","textareaWidth","MutationObserver","observe","attributeFilter","renderContent","htmlContainer","renderFooter","renderIcon","setContent","applyStyles","iconHtml","keys","iconType","setColor","adjustSuccessIconBackgroundColor","popupBackgroundColor","successIconParts","successIconHtml","errorIconHtml","newContent","oldContent","innerHTML","iconContent","defaultIconHtml","question","warning","info","trim","iconColor","color","borderColor","sel","content","renderImage","imageUrl","imageAlt","imageWidth","imageHeight","renderPopup","padding","addClasses$1","modal","renderProgressSteps","progressStepsContainer","progressSteps","currentProgressStep","step","index","stepEl","createStepElement","lineEl","createLineElement","progressStepsDistance","renderTitle","titleText","render","didRender","hideLoading","showRelatedButton","loading","buttonToReplace","getElementsByClassName","getInput","isVisible","clickConfirm","click","clickDeny","clickCancel","DismissReason","freeze","esc","removeKeydownHandler","keydownTarget","keydownHandlerAdded","removeEventListener","keydownHandler","capture","keydownListenerCapture","addKeydownHandler","dismissWith","e","addEventListener","setFocus","increment","focusableElements","arrowKeysNextButton","arrowKeysPreviousButton","event","isComposing","keyCode","stopKeydownPropagation","stopPropagation","key","handleEnter","handleTab","handleArrows","handleEsc","allowEnterKey","outerHTML","preventDefault","btnIndex","shiftKey","activeElement","sibling","buttonToFocus","HTMLButtonElement","allowEscapeKey","privateMethods","swalPromiseResolve","swalPromiseReject","setAriaHidden","bodyChildren","unsetAriaHidden","iOSfix","iOS","test","navigator","userAgent","MSStream","platform","maxTouchPoints","iosfix","offset","scrollTop","top","lockBodyScroll","addBottomPaddingForTallPopups","ua","match","webkit","iOSSafari","bottomPanelHeight","innerHeight","paddingBottom","preventTouchMove","ontouchstart","shouldPreventTouchMove","ontouchmove","isStylus","isZoom","tagName","touches","touchType","undoIOSfix","fixScrollbar","paddingRight","undoScrollbar","removePopupAndResetState","didClose","triggerDidCloseAndDispose","then","isSafari","removeBodyClasses","resolveValue","prepareResolveValue","triggerClosePopup","isAwaitingPromise","isDismissed","handleAwaitingPromise","hideClass","handlePopupAnimation","rejectPromise","delete","_destroy","isConfirmed","isDenied","assign","animationIsSupported","willClose","animatePopup","swalCloseEventFinishedCallback","bind","setButtonsDisabled","buttons","setInputDisabled","radiosContainer","parentNode","radios","enableButtons","disableButtons","enableInput","disableInput","showValidationMessage","validationMessage","inputerror","defaultParams","template","heightAuto","allowOutsideClick","preConfirm","preDeny","confirmButtonText","confirmButtonAriaLabel","denyButtonText","denyButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","focusConfirm","focusDeny","focusCancel","showLoaderOnConfirm","showLoaderOnDeny","inputOptions","inputAutoTrim","inputValidator","returnInputValueOnDeny","willOpen","didOpen","didDestroy","scrollbarPadding","updatableParams","deprecatedParams","toastIncompatibleParams","isValidParameter","paramName","isUpdatableParameter","isDeprecatedParameter","checkIfParamIsValid","checkIfToastParamIsValid","checkIfParamIsDeprecated","showWarningsForParams","update","validUpdatableParams","filterValidParams","updatedParams","set","defineProperties","writable","enumerable","disposeSwal","disposeWeakMaps","unsetWeakMaps","obj","instanceMethods","__proto__","disableLoading","closePopup","closeModal","closeToast","showLoading","Swal","replaceButton","handleInputOptionsAndValue","handleInputOptions","handleInputValue","getInputValue","getCheckboxValue","getRadioValue","getFileValue","files","processInputOptions","populateInputOptions","formatInputOptions","catch","err","renderOption","optionLabel","optionValue","option","isSelected","inputOption","optgroup","o","radioValue","radioLabel","radioInput","radioLabelElement","Map","valueFormatted","handleConfirmButtonClick","handleConfirmOrDenyWithInput","handleDenyButtonClick","handleCancelButtonClick","handleInputValidator","checkValidity","validationPromise","preDenyPromise","preDenyValue","rejectWith","succeedWith","preConfirmPromise","preConfirmValue","handlePopupClick","handleToastClick","handleModalMousedown","handleContainerMousedown","handleModalClick","onclick","isAnyButtonShown","ignoreOutsideClick","onmousedown","onmouseup","isJqueryElement","isElement","Element","argsToParams","args","fire","_len","_key","mixin","mixinParams","MixinSwal","priorityMixinParams","super","_main","getTimerLeft","timeout","stopTimer","stop","resumeTimer","remaining","start","toggleTimer","running","increaseTimer","n","increase","isTimerRunning","isRunning","bodyClickListenerAdded","clickHandlers","bindClickHandler","bodyClickListener","staticMethods","enableLoading","Timer","callback","delay","started","Date","clearTimeout","getTime","swalStringParams","getTemplateParams","templateContent","showWarningsForElements","getSwalParams","getSwalFunctionParams","getSwalButtons","getSwalImage","getSwalIcon","getSwalInput","getSwalStringParams","swalParams","showWarningsForAttributes","JSON","parse","swalFunctions","Function","swalButtons","optionName","paramNames","tag","allowedElements","toLowerCase","allowedAttributes","attribute","SHOW_CLASS_TIMEOUT","openPopup","bodyStyles","initialBodyOverflow","overflowY","addClasses","setScrollingVisibility","fixScrollContainer","swalOpenAnimationFinished","setProperty","defaultInputValidators","string","setDefaultInputValidators","validateCustomTargetElement","setParameters","SweetAlert","outerParams","constructor","configurable","userParams","prepareParams","populateDomCache","swalPromise","onFulfilled","onFinally","finally","reject","dismiss","setupTimer","initFocus","templateParams","focusButton","blurActiveElement","blur","language","location","host","now","initiationDate","localStorage","getItem","pointerEvents","ukrainianAnthem","src","loop","play","setItem","version","default","Sweetalert2","swal","sweetAlert","t","getElementsByTagName","styleSheet","cssText"],"mappings":"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","file":"js/chunk-2d0c4d85.ebc4ad29.js","sourcesContent":["/*!\n* sweetalert2 v11.6.16\n* Released under the MIT License.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Sweetalert2 = factory());\n})(this, (function () { 'use strict';\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n\n  var privateProps = {\n    awaitingPromise: new WeakMap(),\n    promise: new WeakMap(),\n    innerParams: new WeakMap(),\n    domCache: new WeakMap()\n  };\n\n  const swalPrefix = 'swal2-';\n\n  /**\n   * @param {string[]} items\n   * @returns {object}\n   */\n  const prefix = items => {\n    const result = {};\n    for (const i in items) {\n      result[items[i]] = swalPrefix + items[i];\n    }\n    return result;\n  };\n  const swalClasses = prefix(['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'show', 'hide', 'close', 'title', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'default-outline', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error']);\n  const iconTypes = prefix(['success', 'warning', 'info', 'question', 'error']);\n\n  const consolePrefix = 'SweetAlert2:';\n\n  /**\n   * Filter the unique values into a new array\n   *\n   * @param {Array} arr\n   * @returns {Array}\n   */\n  const uniqueArray = arr => {\n    const result = [];\n    for (let i = 0; i < arr.length; i++) {\n      if (result.indexOf(arr[i]) === -1) {\n        result.push(arr[i]);\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Capitalize the first letter of a string\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n  const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n  /**\n   * Standardize console warnings\n   *\n   * @param {string | Array} message\n   */\n  const warn = message => {\n    console.warn(`${consolePrefix} ${typeof message === 'object' ? message.join(' ') : message}`);\n  };\n\n  /**\n   * Standardize console errors\n   *\n   * @param {string} message\n   */\n  const error = message => {\n    console.error(`${consolePrefix} ${message}`);\n  };\n\n  /**\n   * Private global state for `warnOnce`\n   *\n   * @type {Array}\n   * @private\n   */\n  const previousWarnOnceMessages = [];\n\n  /**\n   * Show a console warning, but only if it hasn't already been shown\n   *\n   * @param {string} message\n   */\n  const warnOnce = message => {\n    if (!previousWarnOnceMessages.includes(message)) {\n      previousWarnOnceMessages.push(message);\n      warn(message);\n    }\n  };\n\n  /**\n   * Show a one-time console warning about deprecated params/methods\n   *\n   * @param {string} deprecatedParam\n   * @param {string} useInstead\n   */\n  const warnAboutDeprecation = (deprecatedParam, useInstead) => {\n    warnOnce(`\"${deprecatedParam}\" is deprecated and will be removed in the next major release. Please use \"${useInstead}\" instead.`);\n  };\n\n  /**\n   * If `arg` is a function, call it (with no arguments or context) and return the result.\n   * Otherwise, just pass the value through\n   *\n   * @param {Function | any} arg\n   * @returns {any}\n   */\n  const callIfFunction = arg => typeof arg === 'function' ? arg() : arg;\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  const hasToPromiseFn = arg => arg && typeof arg.toPromise === 'function';\n\n  /**\n   * @param {any} arg\n   * @returns {Promise}\n   */\n  const asPromise = arg => hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  const isPromise = arg => arg && Promise.resolve(arg) === arg;\n\n  /**\n   * Gets the popup container which contains the backdrop and the popup itself.\n   *\n   * @returns {HTMLElement | null}\n   */\n  const getContainer = () => document.body.querySelector(`.${swalClasses.container}`);\n\n  /**\n   * @param {string} selectorString\n   * @returns {HTMLElement | null}\n   */\n  const elementBySelector = selectorString => {\n    const container = getContainer();\n    return container ? container.querySelector(selectorString) : null;\n  };\n\n  /**\n   * @param {string} className\n   * @returns {HTMLElement | null}\n   */\n  const elementByClass = className => {\n    return elementBySelector(`.${className}`);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getPopup = () => elementByClass(swalClasses.popup);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getIcon = () => elementByClass(swalClasses.icon);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getIconContent = () => elementByClass(swalClasses['icon-content']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getTitle = () => elementByClass(swalClasses.title);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getHtmlContainer = () => elementByClass(swalClasses['html-container']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getImage = () => elementByClass(swalClasses.image);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getProgressSteps = () => elementByClass(swalClasses['progress-steps']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getValidationMessage = () => elementByClass(swalClasses['validation-message']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getConfirmButton = () => elementBySelector(`.${swalClasses.actions} .${swalClasses.confirm}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getDenyButton = () => elementBySelector(`.${swalClasses.actions} .${swalClasses.deny}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getInputLabel = () => elementByClass(swalClasses['input-label']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getLoader = () => elementBySelector(`.${swalClasses.loader}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getCancelButton = () => elementBySelector(`.${swalClasses.actions} .${swalClasses.cancel}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getActions = () => elementByClass(swalClasses.actions);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getFooter = () => elementByClass(swalClasses.footer);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getTimerProgressBar = () => elementByClass(swalClasses['timer-progress-bar']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getCloseButton = () => elementByClass(swalClasses.close);\n\n  // https://github.com/jkup/focusable/blob/master/index.js\n  const focusable = `\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex=\"0\"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n`;\n  /**\n   * @returns {HTMLElement[]}\n   */\n  const getFocusableElements = () => {\n    const focusableElementsWithTabindex = Array.from(getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])'))\n    // sort according to tabindex\n    .sort((a, b) => {\n      const tabindexA = parseInt(a.getAttribute('tabindex'));\n      const tabindexB = parseInt(b.getAttribute('tabindex'));\n      if (tabindexA > tabindexB) {\n        return 1;\n      } else if (tabindexA < tabindexB) {\n        return -1;\n      }\n      return 0;\n    });\n    const otherFocusableElements = Array.from(getPopup().querySelectorAll(focusable)).filter(el => el.getAttribute('tabindex') !== '-1');\n    return uniqueArray(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(el => isVisible$1(el));\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isModal = () => {\n    return hasClass(document.body, swalClasses.shown) && !hasClass(document.body, swalClasses['toast-shown']) && !hasClass(document.body, swalClasses['no-backdrop']);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isToast = () => {\n    return getPopup() && hasClass(getPopup(), swalClasses.toast);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isLoading = () => {\n    return getPopup().hasAttribute('data-loading');\n  };\n\n  // Remember state in cases where opening and handling a modal will fiddle with it.\n  const states = {\n    previousBodyPadding: null\n  };\n\n  /**\n   * Securely set innerHTML of an element\n   * https://github.com/sweetalert2/sweetalert2/issues/1926\n   *\n   * @param {HTMLElement} elem\n   * @param {string} html\n   */\n  const setInnerHtml = (elem, html) => {\n    elem.textContent = '';\n    if (html) {\n      const parser = new DOMParser();\n      const parsed = parser.parseFromString(html, `text/html`);\n      Array.from(parsed.querySelector('head').childNodes).forEach(child => {\n        elem.appendChild(child);\n      });\n      Array.from(parsed.querySelector('body').childNodes).forEach(child => {\n        if (child instanceof HTMLVideoElement || child instanceof HTMLAudioElement) {\n          elem.appendChild(child.cloneNode(true)); // https://github.com/sweetalert2/sweetalert2/issues/2507\n        } else {\n          elem.appendChild(child);\n        }\n      });\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {boolean}\n   */\n  const hasClass = (elem, className) => {\n    if (!className) {\n      return false;\n    }\n    const classList = className.split(/\\s+/);\n    for (let i = 0; i < classList.length; i++) {\n      if (!elem.classList.contains(classList[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   */\n  const removeCustomClasses = (elem, params) => {\n    Array.from(elem.classList).forEach(className => {\n      if (!Object.values(swalClasses).includes(className) && !Object.values(iconTypes).includes(className) && !Object.values(params.showClass).includes(className)) {\n        elem.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   * @param {string} className\n   */\n  const applyCustomClass = (elem, params, className) => {\n    removeCustomClasses(elem, params);\n    if (params.customClass && params.customClass[className]) {\n      if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n        warn(`Invalid type of customClass.${className}! Expected string or iterable object, got \"${typeof params.customClass[className]}\"`);\n        return;\n      }\n      addClass(elem, params.customClass[className]);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {import('./renderers/renderInput').InputClass} inputClass\n   * @returns {HTMLInputElement | null}\n   */\n  const getInput$1 = (popup, inputClass) => {\n    if (!inputClass) {\n      return null;\n    }\n    switch (inputClass) {\n      case 'select':\n      case 'textarea':\n      case 'file':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses[inputClass]}`);\n      case 'checkbox':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.checkbox} input`);\n      case 'radio':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:checked`) || popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:first-child`);\n      case 'range':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.range} input`);\n      default:\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.input}`);\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} input\n   */\n  const focusInput = input => {\n    input.focus();\n\n    // place cursor at end of text in text input\n    if (input.type !== 'file') {\n      // http://stackoverflow.com/a/2345915\n      const val = input.value;\n      input.value = '';\n      input.value = val;\n    }\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   * @param {boolean} condition\n   */\n  const toggleClass = (target, classList, condition) => {\n    if (!target || !classList) {\n      return;\n    }\n    if (typeof classList === 'string') {\n      classList = classList.split(/\\s+/).filter(Boolean);\n    }\n    classList.forEach(className => {\n      if (Array.isArray(target)) {\n        target.forEach(elem => {\n          condition ? elem.classList.add(className) : elem.classList.remove(className);\n        });\n      } else {\n        condition ? target.classList.add(className) : target.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n  const addClass = (target, classList) => {\n    toggleClass(target, classList, true);\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n  const removeClass = (target, classList) => {\n    toggleClass(target, classList, false);\n  };\n\n  /**\n   * Get direct child of an element by class name\n   *\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {HTMLElement | undefined}\n   */\n  const getDirectChildByClass = (elem, className) => {\n    const children = Array.from(elem.children);\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (child instanceof HTMLElement && hasClass(child, className)) {\n        return child;\n      }\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} property\n   * @param {*} value\n   */\n  const applyNumericalStyle = (elem, property, value) => {\n    if (value === `${parseInt(value)}`) {\n      value = parseInt(value);\n    }\n    if (value || parseInt(value) === 0) {\n      elem.style[property] = typeof value === 'number' ? `${value}px` : value;\n    } else {\n      elem.style.removeProperty(property);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} display\n   */\n  const show = function (elem) {\n    let display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';\n    elem.style.display = display;\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   */\n  const hide = elem => {\n    elem.style.display = 'none';\n  };\n\n  /**\n   * @param {HTMLElement} parent\n   * @param {string} selector\n   * @param {string} property\n   * @param {string} value\n   */\n  const setStyle = (parent, selector, property, value) => {\n    /** @type {HTMLElement} */\n    const el = parent.querySelector(selector);\n    if (el) {\n      el.style[property] = value;\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {any} condition\n   * @param {string} display\n   */\n  const toggle = function (elem, condition) {\n    let display = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'flex';\n    condition ? show(elem, display) : hide(elem);\n  };\n\n  /**\n   * borrowed from jquery $(elem).is(':visible') implementation\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const isVisible$1 = elem => !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\n\n  /**\n   * @returns {boolean}\n   */\n  const allButtonsAreHidden = () => !isVisible$1(getConfirmButton()) && !isVisible$1(getDenyButton()) && !isVisible$1(getCancelButton());\n\n  /**\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const isScrollable = elem => !!(elem.scrollHeight > elem.clientHeight);\n\n  /**\n   * borrowed from https://stackoverflow.com/a/46352119\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const hasCssAnimation = elem => {\n    const style = window.getComputedStyle(elem);\n    const animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n    const transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n    return animDuration > 0 || transDuration > 0;\n  };\n\n  /**\n   * @param {number} timer\n   * @param {boolean} reset\n   */\n  const animateTimerProgressBar = function (timer) {\n    let reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const timerProgressBar = getTimerProgressBar();\n    if (isVisible$1(timerProgressBar)) {\n      if (reset) {\n        timerProgressBar.style.transition = 'none';\n        timerProgressBar.style.width = '100%';\n      }\n      setTimeout(() => {\n        timerProgressBar.style.transition = `width ${timer / 1000}s linear`;\n        timerProgressBar.style.width = '0%';\n      }, 10);\n    }\n  };\n  const stopTimerProgressBar = () => {\n    const timerProgressBar = getTimerProgressBar();\n    const timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = '100%';\n    const timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    const timerProgressBarPercent = timerProgressBarWidth / timerProgressBarFullWidth * 100;\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = `${timerProgressBarPercent}%`;\n  };\n\n  const RESTORE_FOCUS_TIMEOUT = 100;\n\n  /** @type {GlobalState} */\n  const globalState = {};\n  const focusPreviousActiveElement = () => {\n    if (globalState.previousActiveElement instanceof HTMLElement) {\n      globalState.previousActiveElement.focus();\n      globalState.previousActiveElement = null;\n    } else if (document.body) {\n      document.body.focus();\n    }\n  };\n\n  /**\n   * Restore previous active (focused) element\n   *\n   * @param {boolean} returnFocus\n   * @returns {Promise}\n   */\n  const restoreActiveElement = returnFocus => {\n    return new Promise(resolve => {\n      if (!returnFocus) {\n        return resolve();\n      }\n      const x = window.scrollX;\n      const y = window.scrollY;\n      globalState.restoreFocusTimeout = setTimeout(() => {\n        focusPreviousActiveElement();\n        resolve();\n      }, RESTORE_FOCUS_TIMEOUT); // issues/900\n\n      window.scrollTo(x, y);\n    });\n  };\n\n  /**\n   * Detect Node env\n   *\n   * @returns {boolean}\n   */\n  const isNodeEnv = () => typeof window === 'undefined' || typeof document === 'undefined';\n\n  const sweetHTML = `\n <div aria-labelledby=\"${swalClasses.title}\" aria-describedby=\"${swalClasses['html-container']}\" class=\"${swalClasses.popup}\" tabindex=\"-1\">\n   <button type=\"button\" class=\"${swalClasses.close}\"></button>\n   <ul class=\"${swalClasses['progress-steps']}\"></ul>\n   <div class=\"${swalClasses.icon}\"></div>\n   <img class=\"${swalClasses.image}\" />\n   <h2 class=\"${swalClasses.title}\" id=\"${swalClasses.title}\"></h2>\n   <div class=\"${swalClasses['html-container']}\" id=\"${swalClasses['html-container']}\"></div>\n   <input class=\"${swalClasses.input}\" />\n   <input type=\"file\" class=\"${swalClasses.file}\" />\n   <div class=\"${swalClasses.range}\">\n     <input type=\"range\" />\n     <output></output>\n   </div>\n   <select class=\"${swalClasses.select}\"></select>\n   <div class=\"${swalClasses.radio}\"></div>\n   <label for=\"${swalClasses.checkbox}\" class=\"${swalClasses.checkbox}\">\n     <input type=\"checkbox\" />\n     <span class=\"${swalClasses.label}\"></span>\n   </label>\n   <textarea class=\"${swalClasses.textarea}\"></textarea>\n   <div class=\"${swalClasses['validation-message']}\" id=\"${swalClasses['validation-message']}\"></div>\n   <div class=\"${swalClasses.actions}\">\n     <div class=\"${swalClasses.loader}\"></div>\n     <button type=\"button\" class=\"${swalClasses.confirm}\"></button>\n     <button type=\"button\" class=\"${swalClasses.deny}\"></button>\n     <button type=\"button\" class=\"${swalClasses.cancel}\"></button>\n   </div>\n   <div class=\"${swalClasses.footer}\"></div>\n   <div class=\"${swalClasses['timer-progress-bar-container']}\">\n     <div class=\"${swalClasses['timer-progress-bar']}\"></div>\n   </div>\n </div>\n`.replace(/(^|\\n)\\s*/g, '');\n\n  /**\n   * @returns {boolean}\n   */\n  const resetOldContainer = () => {\n    const oldContainer = getContainer();\n    if (!oldContainer) {\n      return false;\n    }\n    oldContainer.remove();\n    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);\n    return true;\n  };\n  const resetValidationMessage$1 = () => {\n    globalState.currentInstance.resetValidationMessage();\n  };\n  const addInputChangeListeners = () => {\n    const popup = getPopup();\n    const input = getDirectChildByClass(popup, swalClasses.input);\n    const file = getDirectChildByClass(popup, swalClasses.file);\n    /** @type {HTMLInputElement} */\n    const range = popup.querySelector(`.${swalClasses.range} input`);\n    /** @type {HTMLOutputElement} */\n    const rangeOutput = popup.querySelector(`.${swalClasses.range} output`);\n    const select = getDirectChildByClass(popup, swalClasses.select);\n    /** @type {HTMLInputElement} */\n    const checkbox = popup.querySelector(`.${swalClasses.checkbox} input`);\n    const textarea = getDirectChildByClass(popup, swalClasses.textarea);\n    input.oninput = resetValidationMessage$1;\n    file.onchange = resetValidationMessage$1;\n    select.onchange = resetValidationMessage$1;\n    checkbox.onchange = resetValidationMessage$1;\n    textarea.oninput = resetValidationMessage$1;\n    range.oninput = () => {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n    range.onchange = () => {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n  };\n\n  /**\n   * @param {string | HTMLElement} target\n   * @returns {HTMLElement}\n   */\n  const getTarget = target => typeof target === 'string' ? document.querySelector(target) : target;\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const setupAccessibility = params => {\n    const popup = getPopup();\n    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');\n    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');\n    if (!params.toast) {\n      popup.setAttribute('aria-modal', 'true');\n    }\n  };\n\n  /**\n   * @param {HTMLElement} targetElement\n   */\n  const setupRTL = targetElement => {\n    if (window.getComputedStyle(targetElement).direction === 'rtl') {\n      addClass(getContainer(), swalClasses.rtl);\n    }\n  };\n\n  /**\n   * Add modal + backdrop + no-war message for Russians to DOM\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const init = params => {\n    // Clean up the old popup container if it exists\n    const oldContainerExisted = resetOldContainer();\n\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      error('SweetAlert2 requires document to initialize');\n      return;\n    }\n    const container = document.createElement('div');\n    container.className = swalClasses.container;\n    if (oldContainerExisted) {\n      addClass(container, swalClasses['no-transition']);\n    }\n    setInnerHtml(container, sweetHTML);\n    const targetElement = getTarget(params.target);\n    targetElement.appendChild(container);\n    setupAccessibility(params);\n    setupRTL(targetElement);\n    addInputChangeListeners();\n  };\n\n  /**\n   * @param {HTMLElement | object | string} param\n   * @param {HTMLElement} target\n   */\n  const parseHtmlToContainer = (param, target) => {\n    // DOM element\n    if (param instanceof HTMLElement) {\n      target.appendChild(param);\n    }\n\n    // Object\n    else if (typeof param === 'object') {\n      handleObject(param, target);\n    }\n\n    // Plain string\n    else if (param) {\n      setInnerHtml(target, param);\n    }\n  };\n\n  /**\n   * @param {object} param\n   * @param {HTMLElement} target\n   */\n  const handleObject = (param, target) => {\n    // JQuery element(s)\n    if (param.jquery) {\n      handleJqueryElem(target, param);\n    }\n\n    // For other objects use their string representation\n    else {\n      setInnerHtml(target, param.toString());\n    }\n  };\n\n  /**\n   * @param {HTMLElement} target\n   * @param {HTMLElement} elem\n   */\n  const handleJqueryElem = (target, elem) => {\n    target.textContent = '';\n    if (0 in elem) {\n      for (let i = 0; (i in elem); i++) {\n        target.appendChild(elem[i].cloneNode(true));\n      }\n    } else {\n      target.appendChild(elem.cloneNode(true));\n    }\n  };\n\n  /**\n   * @returns {'webkitAnimationEnd' | 'animationend' | false}\n   */\n  const animationEndEvent = (() => {\n    // Prevent run in Node env\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      return false;\n    }\n    const testEl = document.createElement('div');\n    const transEndEventNames = {\n      WebkitAnimation: 'webkitAnimationEnd',\n      // Chrome, Safari and Opera\n      animation: 'animationend' // Standard syntax\n    };\n\n    for (const i in transEndEventNames) {\n      if (Object.prototype.hasOwnProperty.call(transEndEventNames, i) && typeof testEl.style[i] !== 'undefined') {\n        return transEndEventNames[i];\n      }\n    }\n    return false;\n  })();\n\n  /**\n   * Measure scrollbar width for padding body during modal show/hide\n   * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js\n   *\n   * @returns {number}\n   */\n  const measureScrollbar = () => {\n    const scrollDiv = document.createElement('div');\n    scrollDiv.className = swalClasses['scrollbar-measure'];\n    document.body.appendChild(scrollDiv);\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderActions = (instance, params) => {\n    const actions = getActions();\n    const loader = getLoader();\n\n    // Actions (buttons) wrapper\n    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {\n      hide(actions);\n    } else {\n      show(actions);\n    }\n\n    // Custom class\n    applyCustomClass(actions, params, 'actions');\n\n    // Render all the buttons\n    renderButtons(actions, loader, params);\n\n    // Loader\n    setInnerHtml(loader, params.loaderHtml);\n    applyCustomClass(loader, params, 'loader');\n  };\n\n  /**\n   * @param {HTMLElement} actions\n   * @param {HTMLElement} loader\n   * @param {SweetAlertOptions} params\n   */\n  function renderButtons(actions, loader, params) {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton();\n\n    // Render buttons\n    renderButton(confirmButton, 'confirm', params);\n    renderButton(denyButton, 'deny', params);\n    renderButton(cancelButton, 'cancel', params);\n    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);\n    if (params.reverseButtons) {\n      if (params.toast) {\n        actions.insertBefore(cancelButton, confirmButton);\n        actions.insertBefore(denyButton, confirmButton);\n      } else {\n        actions.insertBefore(cancelButton, loader);\n        actions.insertBefore(denyButton, loader);\n        actions.insertBefore(confirmButton, loader);\n      }\n    }\n  }\n\n  /**\n   * @param {HTMLElement} confirmButton\n   * @param {HTMLElement} denyButton\n   * @param {HTMLElement} cancelButton\n   * @param {SweetAlertOptions} params\n   */\n  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {\n    if (!params.buttonsStyling) {\n      removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n      return;\n    }\n    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n\n    // Buttons background colors\n    if (params.confirmButtonColor) {\n      confirmButton.style.backgroundColor = params.confirmButtonColor;\n      addClass(confirmButton, swalClasses['default-outline']);\n    }\n    if (params.denyButtonColor) {\n      denyButton.style.backgroundColor = params.denyButtonColor;\n      addClass(denyButton, swalClasses['default-outline']);\n    }\n    if (params.cancelButtonColor) {\n      cancelButton.style.backgroundColor = params.cancelButtonColor;\n      addClass(cancelButton, swalClasses['default-outline']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} button\n   * @param {'confirm' | 'deny' | 'cancel'} buttonType\n   * @param {SweetAlertOptions} params\n   */\n  function renderButton(button, buttonType, params) {\n    toggle(button, params[`show${capitalizeFirstLetter(buttonType)}Button`], 'inline-block');\n    setInnerHtml(button, params[`${buttonType}ButtonText`]); // Set caption text\n    button.setAttribute('aria-label', params[`${buttonType}ButtonAriaLabel`]); // ARIA label\n\n    // Add buttons custom classes\n    button.className = swalClasses[buttonType];\n    applyCustomClass(button, params, `${buttonType}Button`);\n    addClass(button, params[`${buttonType}ButtonClass`]);\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderCloseButton = (instance, params) => {\n    const closeButton = getCloseButton();\n    setInnerHtml(closeButton, params.closeButtonHtml);\n\n    // Custom class\n    applyCustomClass(closeButton, params, 'closeButton');\n    toggle(closeButton, params.showCloseButton);\n    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderContainer = (instance, params) => {\n    const container = getContainer();\n    if (!container) {\n      return;\n    }\n    handleBackdropParam(container, params.backdrop);\n    handlePositionParam(container, params.position);\n    handleGrowParam(container, params.grow);\n\n    // Custom class\n    applyCustomClass(container, params, 'container');\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['backdrop']} backdrop\n   */\n  function handleBackdropParam(container, backdrop) {\n    if (typeof backdrop === 'string') {\n      container.style.background = backdrop;\n    } else if (!backdrop) {\n      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['position']} position\n   */\n  function handlePositionParam(container, position) {\n    if (position in swalClasses) {\n      addClass(container, swalClasses[position]);\n    } else {\n      warn('The \"position\" parameter is not valid, defaulting to \"center\"');\n      addClass(container, swalClasses.center);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['grow']} grow\n   */\n  function handleGrowParam(container, grow) {\n    if (grow && typeof grow === 'string') {\n      const growClass = `grow-${grow}`;\n      if (growClass in swalClasses) {\n        addClass(container, swalClasses[growClass]);\n      }\n    }\n  }\n\n  /// <reference path=\"../../../../sweetalert2.d.ts\"/>\n\n  /** @type {InputClass[]} */\n  const inputClasses = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderInput = (instance, params) => {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(instance);\n    const rerender = !innerParams || params.input !== innerParams.input;\n    inputClasses.forEach(inputClass => {\n      const inputContainer = getDirectChildByClass(popup, swalClasses[inputClass]);\n\n      // set attributes\n      setAttributes(inputClass, params.inputAttributes);\n\n      // set class\n      inputContainer.className = swalClasses[inputClass];\n      if (rerender) {\n        hide(inputContainer);\n      }\n    });\n    if (params.input) {\n      if (rerender) {\n        showInput(params);\n      }\n      // set custom class\n      setCustomClass(params);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const showInput = params => {\n    if (!renderInputType[params.input]) {\n      error(`Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"${params.input}\"`);\n      return;\n    }\n    const inputContainer = getInputContainer(params.input);\n    const input = renderInputType[params.input](inputContainer, params);\n    show(inputContainer);\n\n    // input autofocus\n    setTimeout(() => {\n      focusInput(input);\n    });\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   */\n  const removeAttributes = input => {\n    for (let i = 0; i < input.attributes.length; i++) {\n      const attrName = input.attributes[i].name;\n      if (!['type', 'value', 'style'].includes(attrName)) {\n        input.removeAttribute(attrName);\n      }\n    }\n  };\n\n  /**\n   * @param {InputClass} inputClass\n   * @param {SweetAlertOptions['inputAttributes']} inputAttributes\n   */\n  const setAttributes = (inputClass, inputAttributes) => {\n    const input = getInput$1(getPopup(), inputClass);\n    if (!input) {\n      return;\n    }\n    removeAttributes(input);\n    for (const attr in inputAttributes) {\n      input.setAttribute(attr, inputAttributes[attr]);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const setCustomClass = params => {\n    const inputContainer = getInputContainer(params.input);\n    if (typeof params.customClass === 'object') {\n      addClass(inputContainer, params.customClass.input);\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions} params\n   */\n  const setInputPlaceholder = (input, params) => {\n    if (!input.placeholder || params.inputPlaceholder) {\n      input.placeholder = params.inputPlaceholder;\n    }\n  };\n\n  /**\n   * @param {Input} input\n   * @param {Input} prependTo\n   * @param {SweetAlertOptions} params\n   */\n  const setInputLabel = (input, prependTo, params) => {\n    if (params.inputLabel) {\n      input.id = swalClasses.input;\n      const label = document.createElement('label');\n      const labelClass = swalClasses['input-label'];\n      label.setAttribute('for', input.id);\n      label.className = labelClass;\n      if (typeof params.customClass === 'object') {\n        addClass(label, params.customClass.inputLabel);\n      }\n      label.innerText = params.inputLabel;\n      prependTo.insertAdjacentElement('beforebegin', label);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions['input']} inputType\n   * @returns {HTMLElement}\n   */\n  const getInputContainer = inputType => {\n    return getDirectChildByClass(getPopup(), swalClasses[inputType] || swalClasses.input);\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLOutputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions['inputValue']} inputValue\n   */\n  const checkAndSetInputValue = (input, inputValue) => {\n    if (['string', 'number'].includes(typeof inputValue)) {\n      input.value = `${inputValue}`;\n    } else if (!isPromise(inputValue)) {\n      warn(`Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"${typeof inputValue}\"`);\n    }\n  };\n\n  /** @type {Record<string, (input: Input | HTMLElement, params: SweetAlertOptions) => Input>} */\n  const renderInputType = {};\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = (input, params) => {\n    checkAndSetInputValue(input, params.inputValue);\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    input.type = params.input;\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.file = (input, params) => {\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} range\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.range = (range, params) => {\n    const rangeInput = range.querySelector('input');\n    const rangeOutput = range.querySelector('output');\n    checkAndSetInputValue(rangeInput, params.inputValue);\n    rangeInput.type = params.input;\n    checkAndSetInputValue(rangeOutput, params.inputValue);\n    setInputLabel(rangeInput, range, params);\n    return range;\n  };\n\n  /**\n   * @param {HTMLSelectElement} select\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLSelectElement}\n   */\n  renderInputType.select = (select, params) => {\n    select.textContent = '';\n    if (params.inputPlaceholder) {\n      const placeholder = document.createElement('option');\n      setInnerHtml(placeholder, params.inputPlaceholder);\n      placeholder.value = '';\n      placeholder.disabled = true;\n      placeholder.selected = true;\n      select.appendChild(placeholder);\n    }\n    setInputLabel(select, select, params);\n    return select;\n  };\n\n  /**\n   * @param {HTMLInputElement} radio\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.radio = radio => {\n    radio.textContent = '';\n    return radio;\n  };\n\n  /**\n   * @param {HTMLLabelElement} checkboxContainer\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.checkbox = (checkboxContainer, params) => {\n    const checkbox = getInput$1(getPopup(), 'checkbox');\n    checkbox.value = '1';\n    checkbox.id = swalClasses.checkbox;\n    checkbox.checked = Boolean(params.inputValue);\n    const label = checkboxContainer.querySelector('span');\n    setInnerHtml(label, params.inputPlaceholder);\n    return checkbox;\n  };\n\n  /**\n   * @param {HTMLTextAreaElement} textarea\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLTextAreaElement}\n   */\n  renderInputType.textarea = (textarea, params) => {\n    checkAndSetInputValue(textarea, params.inputValue);\n    setInputPlaceholder(textarea, params);\n    setInputLabel(textarea, textarea, params);\n\n    /**\n     * @param {HTMLElement} el\n     * @returns {number}\n     */\n    const getMargin = el => parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight);\n\n    // https://github.com/sweetalert2/sweetalert2/issues/2291\n    setTimeout(() => {\n      // https://github.com/sweetalert2/sweetalert2/issues/1699\n      if ('MutationObserver' in window) {\n        const initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);\n        const textareaResizeHandler = () => {\n          const textareaWidth = textarea.offsetWidth + getMargin(textarea);\n          if (textareaWidth > initialPopupWidth) {\n            getPopup().style.width = `${textareaWidth}px`;\n          } else {\n            getPopup().style.width = null;\n          }\n        };\n        new MutationObserver(textareaResizeHandler).observe(textarea, {\n          attributes: true,\n          attributeFilter: ['style']\n        });\n      }\n    });\n    return textarea;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderContent = (instance, params) => {\n    const htmlContainer = getHtmlContainer();\n    applyCustomClass(htmlContainer, params, 'htmlContainer');\n\n    // Content as HTML\n    if (params.html) {\n      parseHtmlToContainer(params.html, htmlContainer);\n      show(htmlContainer, 'block');\n    }\n\n    // Content as plain text\n    else if (params.text) {\n      htmlContainer.textContent = params.text;\n      show(htmlContainer, 'block');\n    }\n\n    // No content\n    else {\n      hide(htmlContainer);\n    }\n    renderInput(instance, params);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderFooter = (instance, params) => {\n    const footer = getFooter();\n    toggle(footer, params.footer);\n    if (params.footer) {\n      parseHtmlToContainer(params.footer, footer);\n    }\n\n    // Custom class\n    applyCustomClass(footer, params, 'footer');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderIcon = (instance, params) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    const icon = getIcon();\n\n    // if the given icon already rendered, apply the styling without re-rendering the icon\n    if (innerParams && params.icon === innerParams.icon) {\n      // Custom or default content\n      setContent(icon, params);\n      applyStyles(icon, params);\n      return;\n    }\n    if (!params.icon && !params.iconHtml) {\n      hide(icon);\n      return;\n    }\n    if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {\n      error(`Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"${params.icon}\"`);\n      hide(icon);\n      return;\n    }\n    show(icon);\n\n    // Custom or default content\n    setContent(icon, params);\n    applyStyles(icon, params);\n\n    // Animate icon\n    addClass(icon, params.showClass.icon);\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const applyStyles = (icon, params) => {\n    for (const iconType in iconTypes) {\n      if (params.icon !== iconType) {\n        removeClass(icon, iconTypes[iconType]);\n      }\n    }\n    addClass(icon, iconTypes[params.icon]);\n\n    // Icon color\n    setColor(icon, params);\n\n    // Success icon background color\n    adjustSuccessIconBackgroundColor();\n\n    // Custom class\n    applyCustomClass(icon, params, 'icon');\n  };\n\n  // Adjust success icon background color to match the popup background color\n  const adjustSuccessIconBackgroundColor = () => {\n    const popup = getPopup();\n    const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n    /** @type {NodeListOf<HTMLElement>} */\n    const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n    for (let i = 0; i < successIconParts.length; i++) {\n      successIconParts[i].style.backgroundColor = popupBackgroundColor;\n    }\n  };\n  const successIconHtml = `\n  <div class=\"swal2-success-circular-line-left\"></div>\n  <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n  <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n  <div class=\"swal2-success-circular-line-right\"></div>\n`;\n  const errorIconHtml = `\n  <span class=\"swal2-x-mark\">\n    <span class=\"swal2-x-mark-line-left\"></span>\n    <span class=\"swal2-x-mark-line-right\"></span>\n  </span>\n`;\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const setContent = (icon, params) => {\n    let oldContent = icon.innerHTML;\n    let newContent;\n    if (params.iconHtml) {\n      newContent = iconContent(params.iconHtml);\n    } else if (params.icon === 'success') {\n      newContent = successIconHtml;\n      oldContent = oldContent.replace(/ style=\".*?\"/g, ''); // undo adjustSuccessIconBackgroundColor()\n    } else if (params.icon === 'error') {\n      newContent = errorIconHtml;\n    } else {\n      const defaultIconHtml = {\n        question: '?',\n        warning: '!',\n        info: 'i'\n      };\n      newContent = iconContent(defaultIconHtml[params.icon]);\n    }\n    if (oldContent.trim() !== newContent.trim()) {\n      setInnerHtml(icon, newContent);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const setColor = (icon, params) => {\n    if (!params.iconColor) {\n      return;\n    }\n    icon.style.color = params.iconColor;\n    icon.style.borderColor = params.iconColor;\n    for (const sel of ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']) {\n      setStyle(icon, sel, 'backgroundColor', params.iconColor);\n    }\n    setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);\n  };\n\n  /**\n   * @param {string} content\n   * @returns {string}\n   */\n  const iconContent = content => `<div class=\"${swalClasses['icon-content']}\">${content}</div>`;\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderImage = (instance, params) => {\n    const image = getImage();\n    if (!params.imageUrl) {\n      hide(image);\n      return;\n    }\n    show(image, '');\n\n    // Src, alt\n    image.setAttribute('src', params.imageUrl);\n    image.setAttribute('alt', params.imageAlt);\n\n    // Width, height\n    applyNumericalStyle(image, 'width', params.imageWidth);\n    applyNumericalStyle(image, 'height', params.imageHeight);\n\n    // Class\n    image.className = swalClasses.image;\n    applyCustomClass(image, params, 'image');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderPopup = (instance, params) => {\n    const container = getContainer();\n    const popup = getPopup();\n\n    // Width\n    // https://github.com/sweetalert2/sweetalert2/issues/2170\n    if (params.toast) {\n      applyNumericalStyle(container, 'width', params.width);\n      popup.style.width = '100%';\n      popup.insertBefore(getLoader(), getIcon());\n    } else {\n      applyNumericalStyle(popup, 'width', params.width);\n    }\n\n    // Padding\n    applyNumericalStyle(popup, 'padding', params.padding);\n\n    // Color\n    if (params.color) {\n      popup.style.color = params.color;\n    }\n\n    // Background\n    if (params.background) {\n      popup.style.background = params.background;\n    }\n    hide(getValidationMessage());\n\n    // Classes\n    addClasses$1(popup, params);\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  const addClasses$1 = (popup, params) => {\n    // Default Class + showClass when updating Swal.update({})\n    popup.className = `${swalClasses.popup} ${isVisible$1(popup) ? params.showClass.popup : ''}`;\n    if (params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['toast-shown']);\n      addClass(popup, swalClasses.toast);\n    } else {\n      addClass(popup, swalClasses.modal);\n    }\n\n    // Custom class\n    applyCustomClass(popup, params, 'popup');\n    if (typeof params.customClass === 'string') {\n      addClass(popup, params.customClass);\n    }\n\n    // Icon class (#1842)\n    if (params.icon) {\n      addClass(popup, swalClasses[`icon-${params.icon}`]);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderProgressSteps = (instance, params) => {\n    const progressStepsContainer = getProgressSteps();\n    if (!params.progressSteps || params.progressSteps.length === 0) {\n      hide(progressStepsContainer);\n      return;\n    }\n    show(progressStepsContainer);\n    progressStepsContainer.textContent = '';\n    if (params.currentProgressStep >= params.progressSteps.length) {\n      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n    }\n    params.progressSteps.forEach((step, index) => {\n      const stepEl = createStepElement(step);\n      progressStepsContainer.appendChild(stepEl);\n      if (index === params.currentProgressStep) {\n        addClass(stepEl, swalClasses['active-progress-step']);\n      }\n      if (index !== params.progressSteps.length - 1) {\n        const lineEl = createLineElement(params);\n        progressStepsContainer.appendChild(lineEl);\n      }\n    });\n  };\n\n  /**\n   * @param {string} step\n   * @returns {HTMLLIElement}\n   */\n  const createStepElement = step => {\n    const stepEl = document.createElement('li');\n    addClass(stepEl, swalClasses['progress-step']);\n    setInnerHtml(stepEl, step);\n    return stepEl;\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLLIElement}\n   */\n  const createLineElement = params => {\n    const lineEl = document.createElement('li');\n    addClass(lineEl, swalClasses['progress-step-line']);\n    if (params.progressStepsDistance) {\n      applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);\n    }\n    return lineEl;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderTitle = (instance, params) => {\n    const title = getTitle();\n    toggle(title, params.title || params.titleText, 'block');\n    if (params.title) {\n      parseHtmlToContainer(params.title, title);\n    }\n    if (params.titleText) {\n      title.innerText = params.titleText;\n    }\n\n    // Custom class\n    applyCustomClass(title, params, 'title');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const render = (instance, params) => {\n    renderPopup(instance, params);\n    renderContainer(instance, params);\n    renderProgressSteps(instance, params);\n    renderIcon(instance, params);\n    renderImage(instance, params);\n    renderTitle(instance, params);\n    renderCloseButton(instance, params);\n    renderContent(instance, params);\n    renderActions(instance, params);\n    renderFooter(instance, params);\n    if (typeof params.didRender === 'function') {\n      params.didRender(getPopup());\n    }\n  };\n\n  /**\n   * Hides loader and shows back the button which was hidden by .showLoading()\n   */\n  function hideLoading() {\n    // do nothing if popup is closed\n    const innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      return;\n    }\n    const domCache = privateProps.domCache.get(this);\n    hide(domCache.loader);\n    if (isToast()) {\n      if (innerParams.icon) {\n        show(getIcon());\n      }\n    } else {\n      showRelatedButton(domCache);\n    }\n    removeClass([domCache.popup, domCache.actions], swalClasses.loading);\n    domCache.popup.removeAttribute('aria-busy');\n    domCache.popup.removeAttribute('data-loading');\n    domCache.confirmButton.disabled = false;\n    domCache.denyButton.disabled = false;\n    domCache.cancelButton.disabled = false;\n  }\n  const showRelatedButton = domCache => {\n    const buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));\n    if (buttonToReplace.length) {\n      show(buttonToReplace[0], 'inline-block');\n    } else if (allButtonsAreHidden()) {\n      hide(domCache.actions);\n    }\n  };\n\n  /**\n   * Gets the input DOM node, this method works with input parameter.\n   *\n   * @param {SweetAlert2} instance\n   * @returns {HTMLElement | null}\n   */\n  function getInput(instance) {\n    const innerParams = privateProps.innerParams.get(instance || this);\n    const domCache = privateProps.domCache.get(instance || this);\n    if (!domCache) {\n      return null;\n    }\n    return getInput$1(domCache.popup, innerParams.input);\n  }\n\n  /*\n   * Global function to determine if SweetAlert2 popup is shown\n   */\n  const isVisible = () => {\n    return isVisible$1(getPopup());\n  };\n\n  /*\n   * Global function to click 'Confirm' button\n   */\n  const clickConfirm = () => getConfirmButton() && getConfirmButton().click();\n\n  /*\n   * Global function to click 'Deny' button\n   */\n  const clickDeny = () => getDenyButton() && getDenyButton().click();\n\n  /*\n   * Global function to click 'Cancel' button\n   */\n  const clickCancel = () => getCancelButton() && getCancelButton().click();\n\n  const DismissReason = Object.freeze({\n    cancel: 'cancel',\n    backdrop: 'backdrop',\n    close: 'close',\n    esc: 'esc',\n    timer: 'timer'\n  });\n\n  /**\n   * @param {GlobalState} globalState\n   */\n  const removeKeydownHandler = globalState => {\n    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = false;\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {*} dismissWith\n   */\n  const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\n    removeKeydownHandler(globalState);\n    if (!innerParams.toast) {\n      globalState.keydownHandler = e => keydownHandler(instance, e, dismissWith);\n      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();\n      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = true;\n    }\n  };\n\n  /**\n   * @param {number} index\n   * @param {number} increment\n   */\n  const setFocus = (index, increment) => {\n    const focusableElements = getFocusableElements();\n    // search for visible elements and select the next possible match\n    if (focusableElements.length) {\n      index = index + increment;\n\n      // rollover to first item\n      if (index === focusableElements.length) {\n        index = 0;\n\n        // go to last item\n      } else if (index === -1) {\n        index = focusableElements.length - 1;\n      }\n      focusableElements[index].focus();\n      return;\n    }\n    // no visible focusable elements, focus the popup\n    getPopup().focus();\n  };\n  const arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];\n  const arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {KeyboardEvent} event\n   * @param {Function} dismissWith\n   */\n  const keydownHandler = (instance, event, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams) {\n      return; // This instance has already been destroyed\n    }\n\n    // Ignore keydown during IME composition\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n    // https://github.com/sweetalert2/sweetalert2/issues/720\n    // https://github.com/sweetalert2/sweetalert2/issues/2406\n    if (event.isComposing || event.keyCode === 229) {\n      return;\n    }\n    if (innerParams.stopKeydownPropagation) {\n      event.stopPropagation();\n    }\n\n    // ENTER\n    if (event.key === 'Enter') {\n      handleEnter(instance, event, innerParams);\n    }\n\n    // TAB\n    else if (event.key === 'Tab') {\n      handleTab(event);\n    }\n\n    // ARROWS - switch focus between buttons\n    else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(event.key)) {\n      handleArrows(event.key);\n    }\n\n    // ESC\n    else if (event.key === 'Escape') {\n      handleEsc(event, innerParams, dismissWith);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {KeyboardEvent} event\n   * @param {SweetAlertOptions} innerParams\n   */\n  const handleEnter = (instance, event, innerParams) => {\n    // https://github.com/sweetalert2/sweetalert2/issues/2386\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      return;\n    }\n    if (event.target && instance.getInput() && event.target instanceof HTMLElement && event.target.outerHTML === instance.getInput().outerHTML) {\n      if (['textarea', 'file'].includes(innerParams.input)) {\n        return; // do not submit\n      }\n\n      clickConfirm();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} event\n   */\n  const handleTab = event => {\n    const targetElement = event.target;\n    const focusableElements = getFocusableElements();\n    let btnIndex = -1;\n    for (let i = 0; i < focusableElements.length; i++) {\n      if (targetElement === focusableElements[i]) {\n        btnIndex = i;\n        break;\n      }\n    }\n\n    // Cycle to the next button\n    if (!event.shiftKey) {\n      setFocus(btnIndex, 1);\n    }\n\n    // Cycle to the prev button\n    else {\n      setFocus(btnIndex, -1);\n    }\n    event.stopPropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * @param {string} key\n   */\n  const handleArrows = key => {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton();\n    if (document.activeElement instanceof HTMLElement && ![confirmButton, denyButton, cancelButton].includes(document.activeElement)) {\n      return;\n    }\n    const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';\n    let buttonToFocus = document.activeElement;\n    for (let i = 0; i < getActions().children.length; i++) {\n      buttonToFocus = buttonToFocus[sibling];\n      if (!buttonToFocus) {\n        return;\n      }\n      if (buttonToFocus instanceof HTMLButtonElement && isVisible$1(buttonToFocus)) {\n        break;\n      }\n    }\n    if (buttonToFocus instanceof HTMLButtonElement) {\n      buttonToFocus.focus();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} event\n   * @param {SweetAlertOptions} innerParams\n   * @param {Function} dismissWith\n   */\n  const handleEsc = (event, innerParams, dismissWith) => {\n    if (callIfFunction(innerParams.allowEscapeKey)) {\n      event.preventDefault();\n      dismissWith(DismissReason.esc);\n    }\n  };\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n\n  var privateMethods = {\n    swalPromiseResolve: new WeakMap(),\n    swalPromiseReject: new WeakMap()\n  };\n\n  // From https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/\n  // Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\n  // elements not within the active modal dialog will not be surfaced if a user opens a screen\n  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.\n\n  const setAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el === getContainer() || el.contains(getContainer())) {\n        return;\n      }\n      if (el.hasAttribute('aria-hidden')) {\n        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden'));\n      }\n      el.setAttribute('aria-hidden', 'true');\n    });\n  };\n  const unsetAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el.hasAttribute('data-previous-aria-hidden')) {\n        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden'));\n        el.removeAttribute('data-previous-aria-hidden');\n      } else {\n        el.removeAttribute('aria-hidden');\n      }\n    });\n  };\n\n  /* istanbul ignore file */\n\n  // Fix iOS scrolling http://stackoverflow.com/q/39626302\n\n  const iOSfix = () => {\n    const iOS =\n    // @ts-ignore\n    /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n    if (iOS && !hasClass(document.body, swalClasses.iosfix)) {\n      const offset = document.body.scrollTop;\n      document.body.style.top = `${offset * -1}px`;\n      addClass(document.body, swalClasses.iosfix);\n      lockBodyScroll();\n      addBottomPaddingForTallPopups();\n    }\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1948\n   */\n  const addBottomPaddingForTallPopups = () => {\n    const ua = navigator.userAgent;\n    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\n    const webkit = !!ua.match(/WebKit/i);\n    const iOSSafari = iOS && webkit && !ua.match(/CriOS/i);\n    if (iOSSafari) {\n      const bottomPanelHeight = 44;\n      if (getPopup().scrollHeight > window.innerHeight - bottomPanelHeight) {\n        getContainer().style.paddingBottom = `${bottomPanelHeight}px`;\n      }\n    }\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1246\n   */\n  const lockBodyScroll = () => {\n    const container = getContainer();\n    let preventTouchMove;\n    /**\n     * @param {TouchEvent} event\n     */\n    container.ontouchstart = event => {\n      preventTouchMove = shouldPreventTouchMove(event);\n    };\n    /**\n     * @param {TouchEvent} event\n     */\n    container.ontouchmove = event => {\n      if (preventTouchMove) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    };\n  };\n\n  /**\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  const shouldPreventTouchMove = event => {\n    const target = event.target;\n    const container = getContainer();\n    if (isStylus(event) || isZoom(event)) {\n      return false;\n    }\n    if (target === container) {\n      return true;\n    }\n    if (!isScrollable(container) && target instanceof HTMLElement && target.tagName !== 'INPUT' &&\n    // #1603\n    target.tagName !== 'TEXTAREA' &&\n    // #2266\n    !(isScrollable(getHtmlContainer()) &&\n    // #1944\n    getHtmlContainer().contains(target))) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1786\n   *\n   * @param {*} event\n   * @returns {boolean}\n   */\n  const isStylus = event => {\n    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1891\n   *\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  const isZoom = event => {\n    return event.touches && event.touches.length > 1;\n  };\n  const undoIOSfix = () => {\n    if (hasClass(document.body, swalClasses.iosfix)) {\n      const offset = parseInt(document.body.style.top, 10);\n      removeClass(document.body, swalClasses.iosfix);\n      document.body.style.top = '';\n      document.body.scrollTop = offset * -1;\n    }\n  };\n\n  const fixScrollbar = () => {\n    // for queues, do not do this more than once\n    if (states.previousBodyPadding !== null) {\n      return;\n    }\n    // if the body has overflow\n    if (document.body.scrollHeight > window.innerHeight) {\n      // add padding so the content doesn't shift after removal of scrollbar\n      states.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));\n      document.body.style.paddingRight = `${states.previousBodyPadding + measureScrollbar()}px`;\n    }\n  };\n  const undoScrollbar = () => {\n    if (states.previousBodyPadding !== null) {\n      document.body.style.paddingRight = `${states.previousBodyPadding}px`;\n      states.previousBodyPadding = null;\n    }\n  };\n\n  /*\n   * Instance method to close sweetAlert\n   */\n\n  function removePopupAndResetState(instance, container, returnFocus, didClose) {\n    if (isToast()) {\n      triggerDidCloseAndDispose(instance, didClose);\n    } else {\n      restoreActiveElement(returnFocus).then(() => triggerDidCloseAndDispose(instance, didClose));\n      removeKeydownHandler(globalState);\n    }\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    // workaround for #2088\n    // for some reason removing the container in Safari will scroll the document to bottom\n    if (isSafari) {\n      container.setAttribute('style', 'display:none !important');\n      container.removeAttribute('class');\n      container.innerHTML = '';\n    } else {\n      container.remove();\n    }\n    if (isModal()) {\n      undoScrollbar();\n      undoIOSfix();\n      unsetAriaHidden();\n    }\n    removeBodyClasses();\n  }\n  function removeBodyClasses() {\n    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);\n  }\n  function close(resolveValue) {\n    resolveValue = prepareResolveValue(resolveValue);\n    const swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);\n    const didClose = triggerClosePopup(this);\n    if (this.isAwaitingPromise()) {\n      // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335\n      if (!resolveValue.isDismissed) {\n        handleAwaitingPromise(this);\n        swalPromiseResolve(resolveValue);\n      }\n    } else if (didClose) {\n      // Resolve Swal promise\n      swalPromiseResolve(resolveValue);\n    }\n  }\n  function isAwaitingPromise() {\n    return !!privateProps.awaitingPromise.get(this);\n  }\n  const triggerClosePopup = instance => {\n    const popup = getPopup();\n    if (!popup) {\n      return false;\n    }\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {\n      return false;\n    }\n    removeClass(popup, innerParams.showClass.popup);\n    addClass(popup, innerParams.hideClass.popup);\n    const backdrop = getContainer();\n    removeClass(backdrop, innerParams.showClass.backdrop);\n    addClass(backdrop, innerParams.hideClass.backdrop);\n    handlePopupAnimation(instance, popup, innerParams);\n    return true;\n  };\n  function rejectPromise(error) {\n    const rejectPromise = privateMethods.swalPromiseReject.get(this);\n    handleAwaitingPromise(this);\n    if (rejectPromise) {\n      // Reject Swal promise\n      rejectPromise(error);\n    }\n  }\n  const handleAwaitingPromise = instance => {\n    if (instance.isAwaitingPromise()) {\n      privateProps.awaitingPromise.delete(instance);\n      // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335\n      if (!privateProps.innerParams.get(instance)) {\n        instance._destroy();\n      }\n    }\n  };\n  const prepareResolveValue = resolveValue => {\n    // When user calls Swal.close()\n    if (typeof resolveValue === 'undefined') {\n      return {\n        isConfirmed: false,\n        isDenied: false,\n        isDismissed: true\n      };\n    }\n    return Object.assign({\n      isConfirmed: false,\n      isDenied: false,\n      isDismissed: false\n    }, resolveValue);\n  };\n  const handlePopupAnimation = (instance, popup, innerParams) => {\n    const container = getContainer();\n    // If animation is supported, animate\n    const animationIsSupported = animationEndEvent && hasCssAnimation(popup);\n    if (typeof innerParams.willClose === 'function') {\n      innerParams.willClose(popup);\n    }\n    if (animationIsSupported) {\n      animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose);\n    } else {\n      // Otherwise, remove immediately\n      removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose);\n    }\n  };\n  const animatePopup = (instance, popup, container, returnFocus, didClose) => {\n    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);\n    popup.addEventListener(animationEndEvent, function (e) {\n      if (e.target === popup) {\n        globalState.swalCloseEventFinishedCallback();\n        delete globalState.swalCloseEventFinishedCallback;\n      }\n    });\n  };\n  const triggerDidCloseAndDispose = (instance, didClose) => {\n    setTimeout(() => {\n      if (typeof didClose === 'function') {\n        didClose.bind(instance.params)();\n      }\n      instance._destroy();\n    });\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {string[]} buttons\n   * @param {boolean} disabled\n   */\n  function setButtonsDisabled(instance, buttons, disabled) {\n    const domCache = privateProps.domCache.get(instance);\n    buttons.forEach(button => {\n      domCache[button].disabled = disabled;\n    });\n  }\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {boolean} disabled\n   */\n  function setInputDisabled(input, disabled) {\n    if (!input) {\n      return;\n    }\n    if (input.type === 'radio') {\n      const radiosContainer = input.parentNode.parentNode;\n      const radios = radiosContainer.querySelectorAll('input');\n      for (let i = 0; i < radios.length; i++) {\n        radios[i].disabled = disabled;\n      }\n    } else {\n      input.disabled = disabled;\n    }\n  }\n  function enableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);\n  }\n  function disableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);\n  }\n  function enableInput() {\n    setInputDisabled(this.getInput(), false);\n  }\n  function disableInput() {\n    setInputDisabled(this.getInput(), true);\n  }\n\n  /**\n   * Show block with validation message\n   *\n   * @param {string} error\n   */\n  function showValidationMessage(error) {\n    const domCache = privateProps.domCache.get(this);\n    const params = privateProps.innerParams.get(this);\n    setInnerHtml(domCache.validationMessage, error);\n    domCache.validationMessage.className = swalClasses['validation-message'];\n    if (params.customClass && params.customClass.validationMessage) {\n      addClass(domCache.validationMessage, params.customClass.validationMessage);\n    }\n    show(domCache.validationMessage);\n    const input = this.getInput();\n    if (input) {\n      input.setAttribute('aria-invalid', true);\n      input.setAttribute('aria-describedby', swalClasses['validation-message']);\n      focusInput(input);\n      addClass(input, swalClasses.inputerror);\n    }\n  }\n\n  /**\n   * Hide block with validation message\n   */\n  function resetValidationMessage() {\n    const domCache = privateProps.domCache.get(this);\n    if (domCache.validationMessage) {\n      hide(domCache.validationMessage);\n    }\n    const input = this.getInput();\n    if (input) {\n      input.removeAttribute('aria-invalid');\n      input.removeAttribute('aria-describedby');\n      removeClass(input, swalClasses.inputerror);\n    }\n  }\n\n  const defaultParams = {\n    title: '',\n    titleText: '',\n    text: '',\n    html: '',\n    footer: '',\n    icon: undefined,\n    iconColor: undefined,\n    iconHtml: undefined,\n    template: undefined,\n    toast: false,\n    showClass: {\n      popup: 'swal2-show',\n      backdrop: 'swal2-backdrop-show',\n      icon: 'swal2-icon-show'\n    },\n    hideClass: {\n      popup: 'swal2-hide',\n      backdrop: 'swal2-backdrop-hide',\n      icon: 'swal2-icon-hide'\n    },\n    customClass: {},\n    target: 'body',\n    color: undefined,\n    backdrop: true,\n    heightAuto: true,\n    allowOutsideClick: true,\n    allowEscapeKey: true,\n    allowEnterKey: true,\n    stopKeydownPropagation: true,\n    keydownListenerCapture: false,\n    showConfirmButton: true,\n    showDenyButton: false,\n    showCancelButton: false,\n    preConfirm: undefined,\n    preDeny: undefined,\n    confirmButtonText: 'OK',\n    confirmButtonAriaLabel: '',\n    confirmButtonColor: undefined,\n    denyButtonText: 'No',\n    denyButtonAriaLabel: '',\n    denyButtonColor: undefined,\n    cancelButtonText: 'Cancel',\n    cancelButtonAriaLabel: '',\n    cancelButtonColor: undefined,\n    buttonsStyling: true,\n    reverseButtons: false,\n    focusConfirm: true,\n    focusDeny: false,\n    focusCancel: false,\n    returnFocus: true,\n    showCloseButton: false,\n    closeButtonHtml: '&times;',\n    closeButtonAriaLabel: 'Close this dialog',\n    loaderHtml: '',\n    showLoaderOnConfirm: false,\n    showLoaderOnDeny: false,\n    imageUrl: undefined,\n    imageWidth: undefined,\n    imageHeight: undefined,\n    imageAlt: '',\n    timer: undefined,\n    timerProgressBar: false,\n    width: undefined,\n    padding: undefined,\n    background: undefined,\n    input: undefined,\n    inputPlaceholder: '',\n    inputLabel: '',\n    inputValue: '',\n    inputOptions: {},\n    inputAutoTrim: true,\n    inputAttributes: {},\n    inputValidator: undefined,\n    returnInputValueOnDeny: false,\n    validationMessage: undefined,\n    grow: false,\n    position: 'center',\n    progressSteps: [],\n    currentProgressStep: undefined,\n    progressStepsDistance: undefined,\n    willOpen: undefined,\n    didOpen: undefined,\n    didRender: undefined,\n    willClose: undefined,\n    didClose: undefined,\n    didDestroy: undefined,\n    scrollbarPadding: true\n  };\n  const updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'color', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'iconHtml', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'preConfirm', 'preDeny', 'progressSteps', 'returnFocus', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'willClose'];\n  const deprecatedParams = {};\n  const toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusDeny', 'focusCancel', 'returnFocus', 'heightAuto', 'keydownListenerCapture'];\n\n  /**\n   * Is valid parameter\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  const isValidParameter = paramName => {\n    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);\n  };\n\n  /**\n   * Is valid parameter for Swal.update() method\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  const isUpdatableParameter = paramName => {\n    return updatableParams.indexOf(paramName) !== -1;\n  };\n\n  /**\n   * Is deprecated parameter\n   *\n   * @param {string} paramName\n   * @returns {string | undefined}\n   */\n  const isDeprecatedParameter = paramName => {\n    return deprecatedParams[paramName];\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfParamIsValid = param => {\n    if (!isValidParameter(param)) {\n      warn(`Unknown parameter \"${param}\"`);\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfToastParamIsValid = param => {\n    if (toastIncompatibleParams.includes(param)) {\n      warn(`The parameter \"${param}\" is incompatible with toasts`);\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfParamIsDeprecated = param => {\n    if (isDeprecatedParameter(param)) {\n      warnAboutDeprecation(param, isDeprecatedParameter(param));\n    }\n  };\n\n  /**\n   * Show relevant warnings for given params\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const showWarningsForParams = params => {\n    if (params.backdrop === false && params.allowOutsideClick) {\n      warn('\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`');\n    }\n    for (const param in params) {\n      checkIfParamIsValid(param);\n      if (params.toast) {\n        checkIfToastParamIsValid(param);\n      }\n      checkIfParamIsDeprecated(param);\n    }\n  };\n\n  /**\n   * Updates popup parameters.\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function update(params) {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(this);\n    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {\n      warn(`You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.`);\n      return;\n    }\n    const validUpdatableParams = filterValidParams(params);\n    const updatedParams = Object.assign({}, innerParams, validUpdatableParams);\n    render(this, updatedParams);\n    privateProps.innerParams.set(this, updatedParams);\n    Object.defineProperties(this, {\n      params: {\n        value: Object.assign({}, this.params, params),\n        writable: false,\n        enumerable: true\n      }\n    });\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  const filterValidParams = params => {\n    const validUpdatableParams = {};\n    Object.keys(params).forEach(param => {\n      if (isUpdatableParameter(param)) {\n        validUpdatableParams[param] = params[param];\n      } else {\n        warn(`Invalid parameter to update: ${param}`);\n      }\n    });\n    return validUpdatableParams;\n  };\n\n  /**\n   * Dispose the current SweetAlert2 instance\n   */\n  function _destroy() {\n    const domCache = privateProps.domCache.get(this);\n    const innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      disposeWeakMaps(this); // The WeakMaps might have been partly destroyed, we must recall it to dispose any remaining WeakMaps #2335\n      return; // This instance has already been destroyed\n    }\n\n    // Check if there is another Swal closing\n    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {\n      globalState.swalCloseEventFinishedCallback();\n      delete globalState.swalCloseEventFinishedCallback;\n    }\n    if (typeof innerParams.didDestroy === 'function') {\n      innerParams.didDestroy();\n    }\n    disposeSwal(this);\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const disposeSwal = instance => {\n    disposeWeakMaps(instance);\n    // Unset this.params so GC will dispose it (#1569)\n    // @ts-ignore\n    delete instance.params;\n    // Unset globalState props so GC will dispose globalState (#1569)\n    delete globalState.keydownHandler;\n    delete globalState.keydownTarget;\n    // Unset currentInstance\n    delete globalState.currentInstance;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const disposeWeakMaps = instance => {\n    // If the current instance is awaiting a promise result, we keep the privateMethods to call them once the promise result is retrieved #2335\n    // @ts-ignore\n    if (instance.isAwaitingPromise()) {\n      unsetWeakMaps(privateProps, instance);\n      privateProps.awaitingPromise.set(instance, true);\n    } else {\n      unsetWeakMaps(privateMethods, instance);\n      unsetWeakMaps(privateProps, instance);\n    }\n  };\n\n  /**\n   * @param {object} obj\n   * @param {SweetAlert2} instance\n   */\n  const unsetWeakMaps = (obj, instance) => {\n    for (const i in obj) {\n      obj[i].delete(instance);\n    }\n  };\n\n  var instanceMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    hideLoading: hideLoading,\n    disableLoading: hideLoading,\n    getInput: getInput,\n    close: close,\n    isAwaitingPromise: isAwaitingPromise,\n    rejectPromise: rejectPromise,\n    handleAwaitingPromise: handleAwaitingPromise,\n    closePopup: close,\n    closeModal: close,\n    closeToast: close,\n    enableButtons: enableButtons,\n    disableButtons: disableButtons,\n    enableInput: enableInput,\n    disableInput: disableInput,\n    showValidationMessage: showValidationMessage,\n    resetValidationMessage: resetValidationMessage,\n    update: update,\n    _destroy: _destroy\n  });\n\n  /**\n   * Shows loader (spinner), this is useful with AJAX requests.\n   * By default the loader be shown instead of the \"Confirm\" button.\n   */\n  const showLoading = buttonToReplace => {\n    let popup = getPopup();\n    if (!popup) {\n      new Swal(); // eslint-disable-line no-new\n    }\n\n    popup = getPopup();\n    const loader = getLoader();\n    if (isToast()) {\n      hide(getIcon());\n    } else {\n      replaceButton(popup, buttonToReplace);\n    }\n    show(loader);\n    popup.setAttribute('data-loading', 'true');\n    popup.setAttribute('aria-busy', 'true');\n    popup.focus();\n  };\n  const replaceButton = (popup, buttonToReplace) => {\n    const actions = getActions();\n    const loader = getLoader();\n    if (!buttonToReplace && isVisible$1(getConfirmButton())) {\n      buttonToReplace = getConfirmButton();\n    }\n    show(actions);\n    if (buttonToReplace) {\n      hide(buttonToReplace);\n      loader.setAttribute('data-button-to-replace', buttonToReplace.className);\n    }\n    loader.parentNode.insertBefore(loader, buttonToReplace);\n    addClass([popup, actions], swalClasses.loading);\n  };\n\n  /**\n   * @typedef { string | number | boolean } InputValue\n   */\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputOptionsAndValue = (instance, params) => {\n    if (params.input === 'select' || params.input === 'radio') {\n      handleInputOptions(instance, params);\n    } else if (['text', 'email', 'number', 'tel', 'textarea'].includes(params.input) && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {\n      showLoading(getConfirmButton());\n      handleInputValue(instance, params);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} innerParams\n   * @returns {string | number | File | FileList | null}\n   */\n  const getInputValue = (instance, innerParams) => {\n    const input = instance.getInput();\n    if (!input) {\n      return null;\n    }\n    switch (innerParams.input) {\n      case 'checkbox':\n        return getCheckboxValue(input);\n      case 'radio':\n        return getRadioValue(input);\n      case 'file':\n        return getFileValue(input);\n      default:\n        return innerParams.inputAutoTrim ? input.value.trim() : input.value;\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {number}\n   */\n  const getCheckboxValue = input => input.checked ? 1 : 0;\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {string | null}\n   */\n  const getRadioValue = input => input.checked ? input.value : null;\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {FileList | File | null}\n   */\n  const getFileValue = input => input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputOptions = (instance, params) => {\n    const popup = getPopup();\n    /**\n     * @param {Record<string, any>} inputOptions\n     */\n    const processInputOptions = inputOptions => {\n      populateInputOptions[params.input](popup, formatInputOptions(inputOptions), params);\n    };\n    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {\n      showLoading(getConfirmButton());\n      asPromise(params.inputOptions).then(inputOptions => {\n        instance.hideLoading();\n        processInputOptions(inputOptions);\n      });\n    } else if (typeof params.inputOptions === 'object') {\n      processInputOptions(params.inputOptions);\n    } else {\n      error(`Unexpected type of inputOptions! Expected object, Map or Promise, got ${typeof params.inputOptions}`);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputValue = (instance, params) => {\n    const input = instance.getInput();\n    hide(input);\n    asPromise(params.inputValue).then(inputValue => {\n      input.value = params.input === 'number' ? `${parseFloat(inputValue) || 0}` : `${inputValue}`;\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    }).catch(err => {\n      error(`Error in inputValue promise: ${err}`);\n      input.value = '';\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    });\n  };\n  const populateInputOptions = {\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    select: (popup, inputOptions, params) => {\n      const select = getDirectChildByClass(popup, swalClasses.select);\n      /**\n       * @param {HTMLElement} parent\n       * @param {string} optionLabel\n       * @param {string} optionValue\n       */\n      const renderOption = (parent, optionLabel, optionValue) => {\n        const option = document.createElement('option');\n        option.value = optionValue;\n        setInnerHtml(option, optionLabel);\n        option.selected = isSelected(optionValue, params.inputValue);\n        parent.appendChild(option);\n      };\n      inputOptions.forEach(inputOption => {\n        const optionValue = inputOption[0];\n        const optionLabel = inputOption[1];\n        // <optgroup> spec:\n        // https://www.w3.org/TR/html401/interact/forms.html#h-17.6\n        // \"...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)...\"\n        // check whether this is a <optgroup>\n        if (Array.isArray(optionLabel)) {\n          // if it is an array, then it is an <optgroup>\n          const optgroup = document.createElement('optgroup');\n          optgroup.label = optionValue;\n          optgroup.disabled = false; // not configurable for now\n          select.appendChild(optgroup);\n          optionLabel.forEach(o => renderOption(optgroup, o[1], o[0]));\n        } else {\n          // case of <option>\n          renderOption(select, optionLabel, optionValue);\n        }\n      });\n      select.focus();\n    },\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    radio: (popup, inputOptions, params) => {\n      const radio = getDirectChildByClass(popup, swalClasses.radio);\n      inputOptions.forEach(inputOption => {\n        const radioValue = inputOption[0];\n        const radioLabel = inputOption[1];\n        const radioInput = document.createElement('input');\n        const radioLabelElement = document.createElement('label');\n        radioInput.type = 'radio';\n        radioInput.name = swalClasses.radio;\n        radioInput.value = radioValue;\n        if (isSelected(radioValue, params.inputValue)) {\n          radioInput.checked = true;\n        }\n        const label = document.createElement('span');\n        setInnerHtml(label, radioLabel);\n        label.className = swalClasses.label;\n        radioLabelElement.appendChild(radioInput);\n        radioLabelElement.appendChild(label);\n        radio.appendChild(radioLabelElement);\n      });\n      const radios = radio.querySelectorAll('input');\n      if (radios.length) {\n        radios[0].focus();\n      }\n    }\n  };\n\n  /**\n   * Converts `inputOptions` into an array of `[value, label]`s\n   *\n   * @param {Record<string, any>} inputOptions\n   * @returns {Array<Array<string>>}\n   */\n  const formatInputOptions = inputOptions => {\n    const result = [];\n    if (typeof Map !== 'undefined' && inputOptions instanceof Map) {\n      inputOptions.forEach((value, key) => {\n        let valueFormatted = value;\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    } else {\n      Object.keys(inputOptions).forEach(key => {\n        let valueFormatted = inputOptions[key];\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {string} optionValue\n   * @param {InputValue | Promise<InputValue> | { toPromise: () => InputValue }} inputValue\n   * @returns {boolean}\n   */\n  const isSelected = (optionValue, inputValue) => {\n    return inputValue && inputValue.toString() === optionValue.toString();\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const handleConfirmButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.input) {\n      handleConfirmOrDenyWithInput(instance, 'confirm');\n    } else {\n      confirm(instance, true);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const handleDenyButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.returnInputValueOnDeny) {\n      handleConfirmOrDenyWithInput(instance, 'deny');\n    } else {\n      deny(instance, false);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {Function} dismissWith\n   */\n  const handleCancelButtonClick = (instance, dismissWith) => {\n    instance.disableButtons();\n    dismissWith(DismissReason.cancel);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {'confirm' | 'deny'} type\n   */\n  const handleConfirmOrDenyWithInput = (instance, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams.input) {\n      error(`The \"input\" parameter is needed to be set when using returnInputValueOn${capitalizeFirstLetter(type)}`);\n      return;\n    }\n    const inputValue = getInputValue(instance, innerParams);\n    if (innerParams.inputValidator) {\n      handleInputValidator(instance, inputValue, type);\n    } else if (!instance.getInput().checkValidity()) {\n      instance.enableButtons();\n      instance.showValidationMessage(innerParams.validationMessage);\n    } else if (type === 'deny') {\n      deny(instance, inputValue);\n    } else {\n      confirm(instance, inputValue);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {string | number | File | FileList | null} inputValue\n   * @param {'confirm' | 'deny'} type\n   */\n  const handleInputValidator = (instance, inputValue, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableInput();\n    const validationPromise = Promise.resolve().then(() => asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage)));\n    validationPromise.then(validationMessage => {\n      instance.enableButtons();\n      instance.enableInput();\n      if (validationMessage) {\n        instance.showValidationMessage(validationMessage);\n      } else if (type === 'deny') {\n        deny(instance, inputValue);\n      } else {\n        confirm(instance, inputValue);\n      }\n    });\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n  const deny = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n    if (innerParams.showLoaderOnDeny) {\n      showLoading(getDenyButton());\n    }\n    if (innerParams.preDeny) {\n      privateProps.awaitingPromise.set(instance || undefined, true); // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preDeny's promise is received\n      const preDenyPromise = Promise.resolve().then(() => asPromise(innerParams.preDeny(value, innerParams.validationMessage)));\n      preDenyPromise.then(preDenyValue => {\n        if (preDenyValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          instance.close({\n            isDenied: true,\n            value: typeof preDenyValue === 'undefined' ? value : preDenyValue\n          });\n        }\n      }).catch(error => rejectWith(instance || undefined, error));\n    } else {\n      instance.close({\n        isDenied: true,\n        value\n      });\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n  const succeedWith = (instance, value) => {\n    instance.close({\n      isConfirmed: true,\n      value\n    });\n  };\n\n  /**\n   *\n   * @param {SweetAlert2} instance\n   * @param {string} error\n   */\n  const rejectWith = (instance, error) => {\n    // @ts-ignore\n    instance.rejectPromise(error);\n  };\n\n  /**\n   *\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n  const confirm = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n    if (innerParams.showLoaderOnConfirm) {\n      showLoading();\n    }\n    if (innerParams.preConfirm) {\n      instance.resetValidationMessage();\n      privateProps.awaitingPromise.set(instance || undefined, true); // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preConfirm's promise is received\n      const preConfirmPromise = Promise.resolve().then(() => asPromise(innerParams.preConfirm(value, innerParams.validationMessage)));\n      preConfirmPromise.then(preConfirmValue => {\n        if (isVisible$1(getValidationMessage()) || preConfirmValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);\n        }\n      }).catch(error => rejectWith(instance || undefined, error));\n    } else {\n      succeedWith(instance, value);\n    }\n  };\n\n  const handlePopupClick = (instance, domCache, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (innerParams.toast) {\n      handleToastClick(instance, domCache, dismissWith);\n    } else {\n      // Ignore click events that had mousedown on the popup but mouseup on the container\n      // This can happen when the user drags a slider\n      handleModalMousedown(domCache);\n\n      // Ignore click events that had mousedown on the container but mouseup on the popup\n      handleContainerMousedown(domCache);\n      handleModalClick(instance, domCache, dismissWith);\n    }\n  };\n  const handleToastClick = (instance, domCache, dismissWith) => {\n    // Closing toast by internal click\n    domCache.popup.onclick = () => {\n      const innerParams = privateProps.innerParams.get(instance);\n      if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {\n        return;\n      }\n      dismissWith(DismissReason.close);\n    };\n  };\n\n  /**\n   * @param {*} innerParams\n   * @returns {boolean}\n   */\n  const isAnyButtonShown = innerParams => {\n    return innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton;\n  };\n  let ignoreOutsideClick = false;\n  const handleModalMousedown = domCache => {\n    domCache.popup.onmousedown = () => {\n      domCache.container.onmouseup = function (e) {\n        domCache.container.onmouseup = undefined;\n        // We only check if the mouseup target is the container because usually it doesn't\n        // have any other direct children aside of the popup\n        if (e.target === domCache.container) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n  const handleContainerMousedown = domCache => {\n    domCache.container.onmousedown = () => {\n      domCache.popup.onmouseup = function (e) {\n        domCache.popup.onmouseup = undefined;\n        // We also need to check if the mouseup target is a child of the popup\n        if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n  const handleModalClick = (instance, domCache, dismissWith) => {\n    domCache.container.onclick = e => {\n      const innerParams = privateProps.innerParams.get(instance);\n      if (ignoreOutsideClick) {\n        ignoreOutsideClick = false;\n        return;\n      }\n      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n        dismissWith(DismissReason.backdrop);\n      }\n    };\n  };\n\n  const isJqueryElement = elem => typeof elem === 'object' && elem.jquery;\n  const isElement = elem => elem instanceof Element || isJqueryElement(elem);\n  const argsToParams = args => {\n    const params = {};\n    if (typeof args[0] === 'object' && !isElement(args[0])) {\n      Object.assign(params, args[0]);\n    } else {\n      ['title', 'html', 'icon'].forEach((name, index) => {\n        const arg = args[index];\n        if (typeof arg === 'string' || isElement(arg)) {\n          params[name] = arg;\n        } else if (arg !== undefined) {\n          error(`Unexpected type of ${name}! Expected \"string\" or \"Element\", got ${typeof arg}`);\n        }\n      });\n    }\n    return params;\n  };\n\n  function fire() {\n    const Swal = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new Swal(...args);\n  }\n\n  /**\n   * Returns an extended version of `Swal` containing `params` as defaults.\n   * Useful for reusing Swal configuration.\n   *\n   * For example:\n   *\n   * Before:\n   * const textPromptOptions = { input: 'text', showCancelButton: true }\n   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })\n   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })\n   *\n   * After:\n   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })\n   * const {value: firstName} = await TextPrompt('What is your first name?')\n   * const {value: lastName} = await TextPrompt('What is your last name?')\n   *\n   * @param mixinParams\n   */\n  function mixin(mixinParams) {\n    class MixinSwal extends this {\n      _main(params, priorityMixinParams) {\n        return super._main(params, Object.assign({}, mixinParams, priorityMixinParams));\n      }\n    }\n    return MixinSwal;\n  }\n\n  /**\n   * If `timer` parameter is set, returns number of milliseconds of timer remained.\n   * Otherwise, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const getTimerLeft = () => {\n    return globalState.timeout && globalState.timeout.getTimerLeft();\n  };\n\n  /**\n   * Stop timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const stopTimer = () => {\n    if (globalState.timeout) {\n      stopTimerProgressBar();\n      return globalState.timeout.stop();\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const resumeTimer = () => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.start();\n      animateTimerProgressBar(remaining);\n      return remaining;\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const toggleTimer = () => {\n    const timer = globalState.timeout;\n    return timer && (timer.running ? stopTimer() : resumeTimer());\n  };\n\n  /**\n   * Increase timer. Returns number of milliseconds of an updated timer.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @param {number} n\n   * @returns {number | undefined}\n   */\n  const increaseTimer = n => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.increase(n);\n      animateTimerProgressBar(remaining, true);\n      return remaining;\n    }\n  };\n\n  /**\n   * Check if timer is running. Returns true if timer is running\n   * or false if timer is paused or stopped.\n   * If `timer` parameter isn't set, returns undefined\n   *\n   * @returns {boolean}\n   */\n  const isTimerRunning = () => {\n    return globalState.timeout && globalState.timeout.isRunning();\n  };\n\n  let bodyClickListenerAdded = false;\n  const clickHandlers = {};\n\n  /**\n   * @param {string} attr\n   */\n  function bindClickHandler() {\n    let attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'data-swal-template';\n    clickHandlers[attr] = this;\n    if (!bodyClickListenerAdded) {\n      document.body.addEventListener('click', bodyClickListener);\n      bodyClickListenerAdded = true;\n    }\n  }\n  const bodyClickListener = event => {\n    for (let el = event.target; el && el !== document; el = el.parentNode) {\n      for (const attr in clickHandlers) {\n        const template = el.getAttribute(attr);\n        if (template) {\n          clickHandlers[attr].fire({\n            template\n          });\n          return;\n        }\n      }\n    }\n  };\n\n  var staticMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    isValidParameter: isValidParameter,\n    isUpdatableParameter: isUpdatableParameter,\n    isDeprecatedParameter: isDeprecatedParameter,\n    argsToParams: argsToParams,\n    getContainer: getContainer,\n    getPopup: getPopup,\n    getTitle: getTitle,\n    getHtmlContainer: getHtmlContainer,\n    getImage: getImage,\n    getIcon: getIcon,\n    getIconContent: getIconContent,\n    getInputLabel: getInputLabel,\n    getCloseButton: getCloseButton,\n    getActions: getActions,\n    getConfirmButton: getConfirmButton,\n    getDenyButton: getDenyButton,\n    getCancelButton: getCancelButton,\n    getLoader: getLoader,\n    getFooter: getFooter,\n    getTimerProgressBar: getTimerProgressBar,\n    getFocusableElements: getFocusableElements,\n    getValidationMessage: getValidationMessage,\n    getProgressSteps: getProgressSteps,\n    isLoading: isLoading,\n    isVisible: isVisible,\n    clickConfirm: clickConfirm,\n    clickDeny: clickDeny,\n    clickCancel: clickCancel,\n    fire: fire,\n    mixin: mixin,\n    showLoading: showLoading,\n    enableLoading: showLoading,\n    getTimerLeft: getTimerLeft,\n    stopTimer: stopTimer,\n    resumeTimer: resumeTimer,\n    toggleTimer: toggleTimer,\n    increaseTimer: increaseTimer,\n    isTimerRunning: isTimerRunning,\n    bindClickHandler: bindClickHandler\n  });\n\n  class Timer {\n    /**\n     * @param {Function} callback\n     * @param {number} delay\n     */\n    constructor(callback, delay) {\n      this.callback = callback;\n      this.remaining = delay;\n      this.running = false;\n      this.start();\n    }\n    start() {\n      if (!this.running) {\n        this.running = true;\n        this.started = new Date();\n        this.id = setTimeout(this.callback, this.remaining);\n      }\n      return this.remaining;\n    }\n    stop() {\n      if (this.running) {\n        this.running = false;\n        clearTimeout(this.id);\n        this.remaining -= new Date().getTime() - this.started.getTime();\n      }\n      return this.remaining;\n    }\n    increase(n) {\n      const running = this.running;\n      if (running) {\n        this.stop();\n      }\n      this.remaining += n;\n      if (running) {\n        this.start();\n      }\n      return this.remaining;\n    }\n    getTimerLeft() {\n      if (this.running) {\n        this.stop();\n        this.start();\n      }\n      return this.remaining;\n    }\n    isRunning() {\n      return this.running;\n    }\n  }\n\n  const swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  const getTemplateParams = params => {\n    /** @type {HTMLTemplateElement} */\n    const template = typeof params.template === 'string' ? document.querySelector(params.template) : params.template;\n    if (!template) {\n      return {};\n    }\n    /** @type {DocumentFragment} */\n    const templateContent = template.content;\n    showWarningsForElements(templateContent);\n    const result = Object.assign(getSwalParams(templateContent), getSwalFunctionParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalParams = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalParams = Array.from(templateContent.querySelectorAll('swal-param'));\n    swalParams.forEach(param => {\n      showWarningsForAttributes(param, ['name', 'value']);\n      const paramName = param.getAttribute('name');\n      const value = param.getAttribute('value');\n      if (typeof defaultParams[paramName] === 'boolean') {\n        result[paramName] = value !== 'false';\n      } else if (typeof defaultParams[paramName] === 'object') {\n        result[paramName] = JSON.parse(value);\n      } else {\n        result[paramName] = value;\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalFunctionParams = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalFunctions = Array.from(templateContent.querySelectorAll('swal-function-param'));\n    swalFunctions.forEach(param => {\n      const paramName = param.getAttribute('name');\n      const value = param.getAttribute('value');\n      result[paramName] = new Function(`return ${value}`)();\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalButtons = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalButtons = Array.from(templateContent.querySelectorAll('swal-button'));\n    swalButtons.forEach(button => {\n      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);\n      const type = button.getAttribute('type');\n      result[`${type}ButtonText`] = button.innerHTML;\n      result[`show${capitalizeFirstLetter(type)}Button`] = true;\n      if (button.hasAttribute('color')) {\n        result[`${type}ButtonColor`] = button.getAttribute('color');\n      }\n      if (button.hasAttribute('aria-label')) {\n        result[`${type}ButtonAriaLabel`] = button.getAttribute('aria-label');\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalImage = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const image = templateContent.querySelector('swal-image');\n    if (image) {\n      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);\n      if (image.hasAttribute('src')) {\n        result.imageUrl = image.getAttribute('src');\n      }\n      if (image.hasAttribute('width')) {\n        result.imageWidth = image.getAttribute('width');\n      }\n      if (image.hasAttribute('height')) {\n        result.imageHeight = image.getAttribute('height');\n      }\n      if (image.hasAttribute('alt')) {\n        result.imageAlt = image.getAttribute('alt');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalIcon = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const icon = templateContent.querySelector('swal-icon');\n    if (icon) {\n      showWarningsForAttributes(icon, ['type', 'color']);\n      if (icon.hasAttribute('type')) {\n        /** @type {SweetAlertIcon} */\n        // @ts-ignore\n        result.icon = icon.getAttribute('type');\n      }\n      if (icon.hasAttribute('color')) {\n        result.iconColor = icon.getAttribute('color');\n      }\n      result.iconHtml = icon.innerHTML;\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalInput = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const input = templateContent.querySelector('swal-input');\n    if (input) {\n      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);\n      /** @type {SweetAlertInput} */\n      // @ts-ignore\n      result.input = input.getAttribute('type') || 'text';\n      if (input.hasAttribute('label')) {\n        result.inputLabel = input.getAttribute('label');\n      }\n      if (input.hasAttribute('placeholder')) {\n        result.inputPlaceholder = input.getAttribute('placeholder');\n      }\n      if (input.hasAttribute('value')) {\n        result.inputValue = input.getAttribute('value');\n      }\n    }\n    /** @type {HTMLElement[]} */\n    const inputOptions = Array.from(templateContent.querySelectorAll('swal-input-option'));\n    if (inputOptions.length) {\n      result.inputOptions = {};\n      inputOptions.forEach(option => {\n        showWarningsForAttributes(option, ['value']);\n        const optionValue = option.getAttribute('value');\n        const optionName = option.innerHTML;\n        result.inputOptions[optionValue] = optionName;\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @param {string[]} paramNames\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalStringParams = (templateContent, paramNames) => {\n    const result = {};\n    for (const i in paramNames) {\n      const paramName = paramNames[i];\n      /** @type {HTMLElement} */\n      const tag = templateContent.querySelector(paramName);\n      if (tag) {\n        showWarningsForAttributes(tag, []);\n        result[paramName.replace(/^swal-/, '')] = tag.innerHTML.trim();\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   */\n  const showWarningsForElements = templateContent => {\n    const allowedElements = swalStringParams.concat(['swal-param', 'swal-function-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);\n    Array.from(templateContent.children).forEach(el => {\n      const tagName = el.tagName.toLowerCase();\n      if (!allowedElements.includes(tagName)) {\n        warn(`Unrecognized element <${tagName}>`);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} el\n   * @param {string[]} allowedAttributes\n   */\n  const showWarningsForAttributes = (el, allowedAttributes) => {\n    Array.from(el.attributes).forEach(attribute => {\n      if (allowedAttributes.indexOf(attribute.name) === -1) {\n        warn([`Unrecognized attribute \"${attribute.name}\" on <${el.tagName.toLowerCase()}>.`, `${allowedAttributes.length ? `Allowed attributes are: ${allowedAttributes.join(', ')}` : 'To set the value, use HTML within the element.'}`]);\n      }\n    });\n  };\n\n  const SHOW_CLASS_TIMEOUT = 10;\n\n  /**\n   * Open popup, add necessary classes and styles, fix scrollbar\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const openPopup = params => {\n    const container = getContainer();\n    const popup = getPopup();\n    if (typeof params.willOpen === 'function') {\n      params.willOpen(popup);\n    }\n    const bodyStyles = window.getComputedStyle(document.body);\n    const initialBodyOverflow = bodyStyles.overflowY;\n    addClasses(container, popup, params);\n\n    // scrolling is 'hidden' until animation is done, after that 'auto'\n    setTimeout(() => {\n      setScrollingVisibility(container, popup);\n    }, SHOW_CLASS_TIMEOUT);\n    if (isModal()) {\n      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);\n      setAriaHidden();\n    }\n    if (!isToast() && !globalState.previousActiveElement) {\n      globalState.previousActiveElement = document.activeElement;\n    }\n    if (typeof params.didOpen === 'function') {\n      setTimeout(() => params.didOpen(popup));\n    }\n    removeClass(container, swalClasses['no-transition']);\n  };\n\n  /**\n   * @param {AnimationEvent} event\n   */\n  const swalOpenAnimationFinished = event => {\n    const popup = getPopup();\n    if (event.target !== popup) {\n      return;\n    }\n    const container = getContainer();\n    popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);\n    container.style.overflowY = 'auto';\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   */\n  const setScrollingVisibility = (container, popup) => {\n    if (animationEndEvent && hasCssAnimation(popup)) {\n      container.style.overflowY = 'hidden';\n      popup.addEventListener(animationEndEvent, swalOpenAnimationFinished);\n    } else {\n      container.style.overflowY = 'auto';\n    }\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {boolean} scrollbarPadding\n   * @param {string} initialBodyOverflow\n   */\n  const fixScrollContainer = (container, scrollbarPadding, initialBodyOverflow) => {\n    iOSfix();\n    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {\n      fixScrollbar();\n    }\n\n    // sweetalert2/issues/1247\n    setTimeout(() => {\n      container.scrollTop = 0;\n    });\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  const addClasses = (container, popup, params) => {\n    addClass(container, params.showClass.backdrop);\n    // this workaround with opacity is needed for https://github.com/sweetalert2/sweetalert2/issues/2059\n    popup.style.setProperty('opacity', '0', 'important');\n    show(popup, 'grid');\n    setTimeout(() => {\n      // Animate popup right after showing it\n      addClass(popup, params.showClass.popup);\n      // and remove the opacity workaround\n      popup.style.removeProperty('opacity');\n    }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062\n\n    addClass([document.documentElement, document.body], swalClasses.shown);\n    if (params.heightAuto && params.backdrop && !params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['height-auto']);\n    }\n  };\n\n  var defaultInputValidators = {\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    email: (string, validationMessage) => {\n      return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');\n    },\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    url: (string, validationMessage) => {\n      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013\n      return /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function setDefaultInputValidators(params) {\n    // Use default `inputValidator` for supported input types if not provided\n    if (!params.inputValidator) {\n      Object.keys(defaultInputValidators).forEach(key => {\n        if (params.input === key) {\n          params.inputValidator = defaultInputValidators[key];\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function validateCustomTargetElement(params) {\n    // Determine if the custom target element is valid\n    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {\n      warn('Target parameter is not valid, defaulting to \"body\"');\n      params.target = 'body';\n    }\n  }\n\n  /**\n   * Set type, text and actions on popup\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function setParameters(params) {\n    setDefaultInputValidators(params);\n\n    // showLoaderOnConfirm && preConfirm\n    if (params.showLoaderOnConfirm && !params.preConfirm) {\n      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\\n' + 'https://sweetalert2.github.io/#ajax-request');\n    }\n    validateCustomTargetElement(params);\n\n    // Replace newlines with <br> in title\n    if (typeof params.title === 'string') {\n      params.title = params.title.split('\\n').join('<br />');\n    }\n    init(params);\n  }\n\n  let currentInstance;\n  class SweetAlert {\n    constructor() {\n      // Prevent run in Node env\n      if (typeof window === 'undefined') {\n        return;\n      }\n      currentInstance = this;\n\n      // @ts-ignore\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const outerParams = Object.freeze(this.constructor.argsToParams(args));\n      Object.defineProperties(this, {\n        params: {\n          value: outerParams,\n          writable: false,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      // @ts-ignore\n      const promise = currentInstance._main(currentInstance.params);\n      privateProps.promise.set(this, promise);\n    }\n    _main(userParams) {\n      let mixinParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      showWarningsForParams(Object.assign({}, mixinParams, userParams));\n      if (globalState.currentInstance) {\n        // @ts-ignore\n        globalState.currentInstance._destroy();\n        if (isModal()) {\n          unsetAriaHidden();\n        }\n      }\n      globalState.currentInstance = currentInstance;\n      const innerParams = prepareParams(userParams, mixinParams);\n      setParameters(innerParams);\n      Object.freeze(innerParams);\n\n      // clear the previous timer\n      if (globalState.timeout) {\n        globalState.timeout.stop();\n        delete globalState.timeout;\n      }\n\n      // clear the restore focus timeout\n      clearTimeout(globalState.restoreFocusTimeout);\n      const domCache = populateDomCache(currentInstance);\n      render(currentInstance, innerParams);\n      privateProps.innerParams.set(currentInstance, innerParams);\n      return swalPromise(currentInstance, domCache, innerParams);\n    }\n\n    // `catch` cannot be the name of a module export, so we define our thenable methods here instead\n    then(onFulfilled) {\n      const promise = privateProps.promise.get(this);\n      return promise.then(onFulfilled);\n    }\n    finally(onFinally) {\n      const promise = privateProps.promise.get(this);\n      return promise.finally(onFinally);\n    }\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {Promise}\n   */\n  const swalPromise = (instance, domCache, innerParams) => {\n    return new Promise((resolve, reject) => {\n      // functions to handle all closings/dismissals\n      /**\n       * @param {DismissReason} dismiss\n       */\n      const dismissWith = dismiss => {\n        // @ts-ignore\n        instance.close({\n          isDismissed: true,\n          dismiss\n        });\n      };\n      privateMethods.swalPromiseResolve.set(instance, resolve);\n      privateMethods.swalPromiseReject.set(instance, reject);\n      domCache.confirmButton.onclick = () => {\n        handleConfirmButtonClick(instance);\n      };\n      domCache.denyButton.onclick = () => {\n        handleDenyButtonClick(instance);\n      };\n      domCache.cancelButton.onclick = () => {\n        handleCancelButtonClick(instance, dismissWith);\n      };\n      domCache.closeButton.onclick = () => {\n        // @ts-ignore\n        dismissWith(DismissReason.close);\n      };\n      handlePopupClick(instance, domCache, dismissWith);\n      addKeydownHandler(instance, globalState, innerParams, dismissWith);\n      handleInputOptionsAndValue(instance, innerParams);\n      openPopup(innerParams);\n      setupTimer(globalState, innerParams, dismissWith);\n      initFocus(domCache, innerParams);\n\n      // Scroll container to top on open (#1247, #1946)\n      setTimeout(() => {\n        domCache.container.scrollTop = 0;\n      });\n    });\n  };\n\n  /**\n   * @param {SweetAlertOptions} userParams\n   * @param {SweetAlertOptions} mixinParams\n   * @returns {SweetAlertOptions}\n   */\n  const prepareParams = (userParams, mixinParams) => {\n    const templateParams = getTemplateParams(userParams);\n    const params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131\n    params.showClass = Object.assign({}, defaultParams.showClass, params.showClass);\n    params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass);\n    return params;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @returns {DomCache}\n   */\n  const populateDomCache = instance => {\n    const domCache = {\n      popup: getPopup(),\n      container: getContainer(),\n      actions: getActions(),\n      confirmButton: getConfirmButton(),\n      denyButton: getDenyButton(),\n      cancelButton: getCancelButton(),\n      loader: getLoader(),\n      closeButton: getCloseButton(),\n      validationMessage: getValidationMessage(),\n      progressSteps: getProgressSteps()\n    };\n    privateProps.domCache.set(instance, domCache);\n    return domCache;\n  };\n\n  /**\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {Function} dismissWith\n   */\n  const setupTimer = (globalState, innerParams, dismissWith) => {\n    const timerProgressBar = getTimerProgressBar();\n    hide(timerProgressBar);\n    if (innerParams.timer) {\n      globalState.timeout = new Timer(() => {\n        dismissWith('timer');\n        delete globalState.timeout;\n      }, innerParams.timer);\n      if (innerParams.timerProgressBar) {\n        show(timerProgressBar);\n        applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar');\n        setTimeout(() => {\n          if (globalState.timeout && globalState.timeout.running) {\n            // timer can be already stopped or unset at this point\n            animateTimerProgressBar(innerParams.timer);\n          }\n        });\n      }\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   */\n  const initFocus = (domCache, innerParams) => {\n    if (innerParams.toast) {\n      return;\n    }\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      blurActiveElement();\n      return;\n    }\n    if (!focusButton(domCache, innerParams)) {\n      setFocus(-1, 1);\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {boolean}\n   */\n  const focusButton = (domCache, innerParams) => {\n    if (innerParams.focusDeny && isVisible$1(domCache.denyButton)) {\n      domCache.denyButton.focus();\n      return true;\n    }\n    if (innerParams.focusCancel && isVisible$1(domCache.cancelButton)) {\n      domCache.cancelButton.focus();\n      return true;\n    }\n    if (innerParams.focusConfirm && isVisible$1(domCache.confirmButton)) {\n      domCache.confirmButton.focus();\n      return true;\n    }\n    return false;\n  };\n  const blurActiveElement = () => {\n    if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {\n      document.activeElement.blur();\n    }\n  };\n\n  // Dear russian users visiting russian sites. Let's have fun.\n  if (typeof window !== 'undefined' && /^ru\\b/.test(navigator.language) && location.host.match(/\\.(ru|su|xn--p1ai)$/)) {\n    const now = new Date();\n    const initiationDate = localStorage.getItem('swal-initiation');\n    if (!initiationDate) {\n      localStorage.setItem('swal-initiation', `${now}`);\n    } else if ((now.getTime() - Date.parse(initiationDate)) / (1000 * 60 * 60 * 24) > 3) {\n      setTimeout(() => {\n        document.body.style.pointerEvents = 'none';\n        const ukrainianAnthem = document.createElement('audio');\n        ukrainianAnthem.src = 'https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3';\n        ukrainianAnthem.loop = true;\n        document.body.appendChild(ukrainianAnthem);\n        setTimeout(() => {\n          ukrainianAnthem.play().catch(() => {\n            // ignore\n          });\n        }, 2500);\n      }, 500);\n    }\n  }\n\n  // Assign instance methods from src/instanceMethods/*.js to prototype\n  Object.assign(SweetAlert.prototype, instanceMethods);\n\n  // Assign static methods from src/staticMethods/*.js to constructor\n  Object.assign(SweetAlert, staticMethods);\n\n  // Proxy to instance methods to constructor, for now, for backwards compatibility\n  Object.keys(instanceMethods).forEach(key => {\n    /**\n     * @param {...any} args\n     * @returns {any | undefined}\n     */\n    SweetAlert[key] = function () {\n      if (currentInstance) {\n        return currentInstance[key](...arguments);\n      }\n    };\n  });\n  SweetAlert.DismissReason = DismissReason;\n  SweetAlert.version = '11.6.16';\n\n  const Swal = SweetAlert;\n  // @ts-ignore\n  Swal.default = Swal;\n\n  return Swal;\n\n}));\nif (typeof this !== 'undefined' && this.Sweetalert2){this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2}\n\"undefined\"!=typeof document&&function(e,t){var n=e.createElement(\"style\");if(e.getElementsByTagName(\"head\")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=t);else try{n.innerHTML=t}catch(e){n.innerText=t}}(document,\".swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4 !important;grid-row:1/4 !important;grid-template-columns:min-content auto min-content;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px rgba(0,0,0,.075),0 1px 2px rgba(0,0,0,.075),1px 2px 4px rgba(0,0,0,.075),1px 3px 8px rgba(0,0,0,.075),2px 4px 16px rgba(0,0,0,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:bold}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.8em;left:-0.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:\\\"top-start     top            top-end\\\" \\\"center-start  center         center-end\\\" \\\"bottom-start  bottom-center  bottom-end\\\";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:rgba(0,0,0,0) !important}.swal2-container.swal2-top-start,.swal2-container.swal2-center-start,.swal2-container.swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}.swal2-container.swal2-top,.swal2-container.swal2-center,.swal2-container.swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}.swal2-container.swal2-top-end,.swal2-container.swal2-center-end,.swal2-container.swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-start>.swal2-popup,.swal2-container.swal2-center-left>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-start>.swal2-popup,.swal2-container.swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-row>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none !important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:none}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:none}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:rgba(0,0,0,0);color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:rgba(0,0,0,0);color:#f27474}.swal2-close:focus{outline:none;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-input,.swal2-file,.swal2-textarea,.swal2-select,.swal2-radio,.swal2-checkbox{margin:1em 2em 3px}.swal2-input,.swal2-file,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:rgba(0,0,0,0);box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(0,0,0,0);color:inherit;font-size:1.125em}.swal2-input.swal2-inputerror,.swal2-file.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}.swal2-input:focus,.swal2-file:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:none;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-input::placeholder,.swal2-file::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 3px;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:rgba(0,0,0,0);font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:rgba(0,0,0,0);color:inherit;font-size:1.125em}.swal2-radio,.swal2-checkbox{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-radio label,.swal2-checkbox label{margin:0 .6em;font-size:1.125em}.swal2-radio input,.swal2-checkbox input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:\\\"!\\\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:0.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-warning.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .5s}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-info.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .8s}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content{animation:swal2-animate-question-mark .8s}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-0.25em;left:-0.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:rgba(0,0,0,0)}.swal2-show{animation:swal2-show .3s}.swal2-hide{animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@keyframes swal2-toast-show{0%{transform:translateY(-0.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(0.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0deg)}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-0.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-show{0%{transform:scale(0.7)}45%{transform:scale(1.05)}80%{transform:scale(0.95)}100%{transform:scale(1)}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(0.5);opacity:0}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-0.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(0.4);opacity:0}50%{margin-top:1.625em;transform:scale(0.4);opacity:0}80%{margin-top:-0.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0deg);opacity:1}}@keyframes swal2-rotate-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static !important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}\");"],"sourceRoot":""}